### 997 boot.options

OPEN.IDE.STARTUP 0;
SHOW.KEYBOARD 0;

VIDEO.PLAYER 1;

# BOOT MODES [

BOOT.REC.NODES 1;
BOOT.PANEL 1;
BOOT.PANEL.TOP 1;
BOOT.IDE 1;
BOOT.APPS 0;
BOOT.BOOTLOADER 0;
BOOT.WALLET 0;
BOOT.DEMO0 0;
BOOT.GAME.NEBULA 0;
BOOT.TOUCH.DEBUG 0;

#BOOT.BOOTLOADER.Z 0;
BOOT.BOOTLOADER.Z 0-100;

# BOOT MODES ]

SHOW.AVATARS1 2; # 1 - demo, 2 - boot
SHOW.UFO 0;
SHOW.WALLEE 0;

TRACK.STOP music.stop(r0);
TRACK.SET music.set.track(r0, 1, 2, 6); # WhoMadeWho
#TRACK.PLAY music.play(r0, 1, 1.2*60*60, 1);
#TRACK.PLAY music.play(r0, 1, 360, 1);
#TRACK.PLAY music.play(r0, 1, 360*1.79, 1);

#TRACK.SET music.set.track(r0, 1, 2, 17); # EE189
#TRACK.PLAY music.play(r0, 1, 26.8*60, 1); # EE
#TRACK.PLAY music.play(r0, 1, 60*46+20, 1); # EE

#TRACK.SET music.set.track(r0, 1, 2, 1); # AVATAR
#TRACK.PLAY music.play(r0, 1, 0, 1);
##TRACK.SET music.set.track(r0, 1, 2, 2); # AVB-1
#TRACK.PLAY music.play(r0, 1, 1100, 1);

#TRACK.SET music.set.track(r0, 1, 2, 19); # Spirit
#TRACK.PLAY music.play(r0, 1, 10*60, 1);

#TRACK.SET music.set.track(r0, 1, 2, 18); # Noc
TRACK.SET music.set.track(r0, 1, 2, 20); # avb
TRACK.PLAY music.play(r0, 1, 0, 1);

#TRACK.SET music.set.track(r0, 1, 2, 22); # W3W
#TRACK.PLAY music.play(r0, 1, 60, 1);

#TRACK.SET music.set.track(r0, 1, 2, 23); # Synergy
#TRACK.PLAY music.play(r0, 1, 0, 1);

#TRACK.SET music.set.track(r0, 1, 2, 24); # Space1
#TRACK.SET music.set.track(r0, 1, 2, 25); # Space2
#TRACK.SET music.set.track(r0, 1, 2, 26); # Space3
#TRACK.PLAY music.play(r0, 1, 0, 1);

#TRACK.SET music.set.track(r0, 1, 3, 43); # serious sam
#TRACK.SET music.set.track(r0, 1, 3, 4); # serious sam

#TRACK.SET music.set.track(r0, 1, 2, 27); # megablast
#TRACK.SET music.set.track(r0, 1, 2, 29); # fantastica

#TRACK.SET music.set.track(r0, 1, 2, 30); # 
#TRACK.SET music.set.track(r0, 1, 2, 31); # Pa

#TRACK.SET music.set.track(r0, 1, 2, 32); # Moby
#TRACK.SET music.set.track(r0, 1, 2, 36); # 
#TRACK.SET music.set.track(r0, 1, 2, 33); # 

#TRACK.PLAY music.play(r0, 1, 0, 1); 
#TRACK.STOP 0;

VIDEO.REC.SECONDS 15;
#VIDEO.REC.SECONDS 30;
STREAM.TWITCH 0;

### 998 private.strings.ENCRYPTED

S.private = ENCRYPT(S, K);

S.live1.twitch.tv rtmp://live-jfk.twitch.tv/app/live_442520422_hFVfe4yhYnoOwsSCa9oSLK3kE6Z7Cb;


### 999 boot.strings.PROTOTYPE

S.acpu.server.url0 ws://192.168.8.100:8077;

### 2 qqqqq
r0:=0;




### 1000  ._. Boot

#_ @1;

_ @1010;
_ @sys.node;
_ @sys.cpu;
_ @sys.display;

# EMULATE DEVICE [

device.screen {
 iphone7 {w 750; h 1334; scale 2;};
 iphone7.plus {w 1080; h 1920; scale 3;};

 iphone8 {w 750; h 1334; scale 2;};
 iphone8.plus {w 1080; h 1920; scale 3;};

 iphone10 {w 1125; h 2436; scale 3;};
 iphone10.xr {w 828; h 1792; scale 2;};
 iphone10.xs {w 1125; h 2436; scale 3;};
 iphone10.xs.max {w 1242; h 2688; scale 3;};

 iphone11 {w 828; h 1792; scale 2;};
 iphone11.pro {w 1125; h 2436; scale 2;};
 iphone11.pro.max {w 1242; h 2688; scale 2;};

 iphone12 {w 1170; h 2532; scale 3;};
 iphone12.mini {w 1080; h 2340; scale 3;};
 iphone12.pro {w 1170; h 2532; scale 3;};
 iphone12.pro.max {w 1284; h 2778; scale 3;};

 iphone13 {w 1170; h 2532; scale 3;};
 iphone13.mini {w 1080; h 2340; scale 3;};
 iphone13.pro {w 1170; h 2532; scale 3;};
 iphone13.pro.max {w 1284; h 2778; scale 3;};

 iphone14 {w 1170; h 2532; scale 3;};
 iphone14.plus {w 1284; h 2778; scale 3;};
 iphone14.pro {w 1179; h 2556; scale 3;};
 iphone14.pro.max {w 1290; h 2796; scale 3;};

 ipad.pro3.s12 {w 2048; h 2732; scale 2;}; # 12.9
 ipad.pro3.s11 {w 1668; h 2224; scale 2;}; # 11
   
 ipad.pro2.s12 {w 2048; h 2732; scale 2;}; # 12.9
 ipad.pro2.s10 {w 1668; h 2224; scale 2;}; # 10.5
};

emulation {
_ device.screen;

emulate.device(cpu.device.type.iphone, cpu.device.model.iphone8, 0);
#emulate.device(cpu.device.type.ipad, cpu.device.model.ipad.pro, 0);

iphone iphone7;
#iphone iphone7.plus;

#iphone iphone8;
#iphone iphone14;
#iphone iphone14.plus;
#iphone iphone14.pro;
#iphone iphone14.pro.max;
#iphone iphone13;
#iphone iphone13.mini;
#iphone iphone13.pro;
#iphone iphone13.pro.max;
#iphone iphone12;
#iphone iphone12.mini;
#iphone iphone12.pro;
#iphone iphone12.pro.max;
#iphone iphone11;
#iphone iphone11.pro;
#iphone iphone11.pro.max;
#iphone iphone10;
#iphone iphone10.xr;
#iphone iphone10.xs;
#iphone iphone10.xs.max;

#iphone ipad.pro2.s10;

emulate.dispaly(iphone.w, iphone.h, iphone.scale, display.orientation.portrait);
#emulate.dispaly(iphone.h, iphone.w, iphone.scale, display.orientation.landscape);

_ @sys.display;
#display.scaled.size();
#display.size();
h1=768*display.scale;

#s:=1;
s:=0.7;
#s:=0.5;
#s:=0.3;
if(iphone.h > h1) {
 s:=0.35;
};

#s:=h1/(iphone.h*iphone.scale);
s:=h1/iphone.h-0.1;

#s:=if(iphone.scale==2,0.5,s); # crash exprtk

t+=dt;

};
#emulation;


# EMULATE DEVICE ]

Boot.texture 1600;

node.new.this.ex(r0, Boot.texture, 0);

w:=iphone.w;
h:=iphone.h/iphone.scale;
draw(r0, 900);
#s:=1.08;

#_ @sys.cpu;

#qtime 0;
#qtime+=0.001;
#cpu.set.frame.time(u0, sin(qtime)*100);
#cpu.set.frame.time(u0, rnd(u0)*1000);

#cpu.set.frame.time(u0, cpu.get.frame.time(u0)*10);

#cpu.get.frame.time(u0);
#
#cpu.set.frame.time.mode(u0, 1);
cpu.set.frame.time.mode(u0, 0);


### 900 Boot.debug.draw

color(u0, 1,1,1,1);
rect(u0, 6, 0,0, w,h);


### 1610 Boot.main

_ @0;

# test needCompile [
a1001 @1001;
# test needCompile ]

_ @1010;
_ @sys.node;
_ @sys.touch;
_ @sys.net;
_ @sys.cpu;

cpu.init(r0);

# BOOT NID [
bootnid u29;
bootnid:=nid;
# BOOT NID ]

r0:=k==0;

# i18n [

_ @1100;

if (r0) {
 _ @util.i18n;

 i18n.reset();

 i18n.init();
# i18n.init(999);
};

# i18n ]

# NETWORKING [

#url0 l12;
#url0:=S.acpu.server.url0;
#net.url.connect(r0, url0);

if (r0) {
#net.host(192,168,43,251, 8077);
#net.host(172,20,10,6, 8077);
#net.host(192,168,3,201, 8077);
# net.host(192,168,1,7, 8077);
 net.host(192,168,0,176, 8077);
 #net.host(144,247,5,7, 8077);
# net.host(192,168,137,86, 8077);
# net.host(192,168,43,251, 8077);
};

net.editor.update(1);
net.reset.after.update(1, 1000);

# NETWORKING ]

_ @sys.llog;
#llog.host(u0, 192,168,1,7, 8995);
#llog.host(u0, 192,168,0,176, 8995);
#llog.host(u0, 192,168,137,86, 8995);
#llog.host(u0, 192,168,8,103, 8995);
#llog.host(u0, 144,247,5,7, 8995);
#llog.host(u0, 192,168,43,251, 8995);
llog.host(u0, 192,168,0,176, 8995);
llog.enable(u0, 1);

#draw(r0, 1001);


#_ @boot.sharedobj;

# DISPLAY ORIENTATION [

_ @1010;
_ @sys.display;

vw 768; vh 1024;

#display.size;
#vw:=o0;
#vh:=o1;
display.scalled.size(vw,vh);

l0:=display.orientation.get() - display.orientation.landscape;         
if (l0>0) {
 w:=vh;
 h:=vw;
# s:=1;
};
if (l0<=0) {
 w:=vw;
 h:=vh;
# s:=0.65;
};

# DISPLAY ORIENTATION ]
# INIT [

BOOT.OPTIONS 997;
_ @BOOT.OPTIONS;

# old: ide/syntax [

ide.setup
 call(_0, -5, 0,0,0,0, 0,0,0,0);

syntax.highlight.init
 call(_0, -1, 0,0,0,0, 0,0,0,0);

#ide.setup(u0);
#syntax.highlight.init(u0);

# old: ide/syntax ]

# SOUND [

_ @sys.dsp;

if (r0) {
 dsp.reset();
};

music.set.track(r0, 1, 2, 1);

#music.set.track(r0, 1, 2, 3);
#music.set.track(r0, 1, 2, 4);
#music.set.track(r0, 1, 2, 5);
#music.set.track(r0, 1, 2, 6);
#music.stop(r0);
#music.play(r0, -1, 300, 1);
#music.play(r0, -1, 23*60, 1);
#music.play(r0, -1, 0, 1);
#music.play(r0, -1, 70*60, 1);

TRACK.SET;
TRACK.STOP;
if (t>0.5) {
# TRACK.PLAY music.play(l9==0, 1, 0, 1);
 r01=r0;
 r0:=l9==0;
 TRACK.PLAY;
 l9:=1;
 r0:=r01;
};

#music.play(r0, 1, 0, 1);
#music.stop(r0);


# SOUND ]
# INIT ]

# BOOT [

touch.start();

_ @sys.events;

events.step();

_ @sys.media;

media.init(r0);
media.step(u0, dt);

#_ @1100;
#_ @util.i18n;

#if (r0) {
# i18n.init();
#};

t+=dt;

x:=200;
y:=-400;
s:=0.2*10;
r:=0;
#s:=1.0;

zoom1
{
 x-=0.5;
 x:=-1500;
 y:=40;
 s:=2.0;
};

zoom2
{
y:=100;
r:=10;
s:=0.4+0.2*sin(t);
x:=100;
};

zoom3
{
 i mod(t, 30);
 if(i<10,zoom1, if(i<20,zoom2,0));
};

zoom4
{
 x:=0;
 y:=-1400;
 s:=5;
};
#zoom4;

zoomA
{
 i mod(t, 38);
 if(i<10,zoom1, if(i<20,zoom2, if(i<30,zoom4,0)));
};
#zoom1;
#zoom2;
#zoom3;
#zoom4;
#zoomA;

zoomX
{
 y:=100;
 r:=0+10*sin(t/2);
 s:=0.6+0.5*sin(t*0.75);
 x:=150;
};

#zoomX;
x:=0;y:=0;s:=1;
#x:=-100*6;y:=-700*3;s:=4;

#s:=1.4;
#y:=-300;

#s:=0.3;
# MOBA
#zoom4;

#x:=300;y:=100;s:=0.4;r:=-2;
#x:=300;y:=100;s:=0.2;r:=10;
#music 141-37:00

new.Edit1
 node.new.this.object(r0, 1002, 0);

#new.Edit1();

setup.bg;

#!node.new.this.object(r0, 2000, 0);
#node.new.this.object(r0, 3000, 0);
#node.new.this.ex(r0, 9700, 0);
#node.new.this.ex(r0, 9740, 0);
#!node.new.this.ex(r0, 20000, 0);
#!node.new.this.ex(r0, 11000, 0);

#s:=sin(t)*0.5+1;

DOTA.MAIN 3202;
#node.new.this.ex(r0, DOTA.MAIN, 0);

SHADER.TEST 37000;
#node.new.this.ex(r0, SHADER.TEST, 0);

COGX 6000;
#node.new.this.ex(r0, COGX, 0);

FILTERS 7000;
#node.new.this.ex(r0, FILTERS, 0);

TEXTUREMAN.TEST 7200;
#node.new.this.ex(r0, TEXTUREMAN.TEST, 0);

IMGNODE 7040;
#node.new.this.ex(r0, IMGNODE, 0);

TESTS 5000;
#node.new.this.ex(r0, TESTS, 0);

EDITOR 8000;
#node.new.this.ex(r0, EDITOR, 0);

BOT 7350;
#node.new.this.ex(r0, BOT, 0);

GAME.CRAZY.BIRD 10008000;
#node.new.this.ex(r0, GAME.CRAZY.BIRD, 0);
#node.new.this.ex(r0, 10008000, 0);


AWESOME.NOTES 10010000;
#node.new.this.ex(r0, AWESOME.NOTES, 0);

ACPU.STUDIO 10019000;
#node.new.this.ex(r0, ACPU.STUDIO, 0);

LIVECOMMENT 10018000;
#node.new.this.ex(r0, LIVECOMMENT, 0);

UNLIMITED.LIFE 70000;
#node.new.this.ex(r0, UNLIMITED.LIFE, 0);

NOOBMAN 10007000;
#node.new.this.ex(r0, NOOBMAN, 0);

NOOBSMILE 10024000;
#node.new.this.ex(r0, NOOBSMILE, 0);

HIPSTER.BANNER 10025000;
node.new.this.ex(r0, HIPSTER.BANNER, 0);



VG {
 _ @core.vg;
 #node.new.this.ex(r0, core.vg.node.test0, 0);
 #node.new.this.ex(r0, core.vg.node.test1, 0);
 #node.new.this.ex(r0, core.vg.node.test2, 0);
 paint0=node.new.this.ex(r0, core.vg.node.test3, 0);

# node.set.xy(u0, paint0, 100,100);
# node.set.s(u0, paint0, 0.25);

 SNAKE 10150000;
 #node.new.this.ex(r0, SNAKE, 0); 

 PAINT 10160000;
 node.new.this.ex(r0, PAINT, 0);
};

PHOTONEO 7500;
#node.new.this.ex(r0, PHOTONEO, 0);

CLOCK 10170000;
#l0:=node.new.this.ex(r0, CLOCK, 0);
#node.prop.x.s(u0, l0, 550);

GAME.NEBULA 11800;
node.new.this.ex(r0*BOOT.GAME.NEBULA, GAME.NEBULA, 0);

#VG;

# NEO V2 [

neo.v2.tests 7990;
#node.new.this.ex(r0, neo.v2.tests, 0);

# NEO V2 ]
# WALLET [

new.wallet {
 _ @core.gl3d;
 l0:=node.new.this.ex(r0, gl3d.test.main, 0);
# node.prop.s.s(u0, l0, 0.9);
# node.prop.s.s(u0, l0, 0.4);
# node.prop.s.s(u0, l0, 2);
# node.prop.x.s(u0, l0, -w/2);
# node.prop.y.s(u0, l0, -800);
};
#new.wallet;

# WALLET ]
# GAME MERGE.LIFE [

merge.life 1100000;
#node.new.this.ex(r0, merge.life, 0);

#VG;

# GAME MERGE.LIFE ]
# APPS [

_ @sys.os;
_ @os.apps;

apps0 l11;

if (r0) {
 if (BOOT.APPS) {
  apps0:=node.new.this.ex(r0, os.apps.run, 0);
 };
};

# APPS ]


#VG;

BIRD 7340;
#node.new.this.ex(r0, BIRD, 0);

# RUNNERS [

hide.default {
 node.prop.visible.s(u0, avatar.mel0, 0);
};

run.dota {
 hide.default;
 node.new.this.ex(u0, DOTA.MAIN, 0);
};

run.nebula {
 hide.default;
 node.new.this.ex(u0, GAME.NEBULA, 0);
};

run.paint {
 hide.default;
 _ @core.vg;
 paint0=node.new.this.ex(u0, core.vg.node.test3, 0);

 SNAKE 10150000;
 #node.new.this.ex(r0, SNAKE, 0); 

 PAINT 10160000;
 node.new.this.ex(u0, PAINT, 0);
};

run.wallet {
 hide.default;
 _ @core.gl3d;
 l0:=node.new.this.ex(u0, gl3d.test.main, 0);
};

run.neo {
 hide.default;
 node.new.this.ex(u0, neo.v2.tests, 0);
};

# RUNNERS ]
# OS/IDE [

_ @sys.os;
_ @os.main;

ide0 l15;
panel0 l14;

# METRICS [

os.metrics {
 _ @sys.display;

 vw 768; vh 1024;
 portrait.w 768;
 portrait.h 1024;

 step {
  display.scalled.size(vw,vh);
  portrait.w:=min(vw,vh);
  portrait.h:=max(vw,vh);
 };




 panel {
  w portrait.w;
  h 100;
  x 0;
  y portrait.h-h;
 };
 panel.portrait {
  x panel.x;
  y panel.y;
  w panel.w;
  h panel.h;
 };
 panel.landscape {
  x vw-portrait.w;
  y vh-h;
  w panel.w;
  h panel.h;
 };
 
 ide {
  x 0;
  y 0;
  w portrait.w;
  h 400;
 };
 ide.portrait {
#  s 0.97;
#  y panel.portrait.y-ide.h + ((1 - s) * ide.h);
  s 1;
  x 0;
  y panel.portrait.y-ide.h;
  w ide.w;
  h ide.h;
 };
 ide.landscape {
  s 0.8;
  x panel.landscape.x;
  y panel.landscape.y-ide.h*s;
  w ide.w;
  h ide.h;
 };
};

os.metrics.step;

metrics0 os.metrics;


# METRICS ]
# UI ORIENTATION [

if (display.is.portrait) {
 m metrics0;
 node.prop.s.s(u0, ide0, m.ide.portrait.s);
 node.prop.x.s(u0, ide0, 0);
 node.prop.y.s(u0, ide0, m.ide.portrait.y);
 node.prop.s.s(u0, panel0, 1);
 node.prop.x.s(u0, panel0, m.panel.portrait.x);
 node.prop.y.s(u0, panel0, m.panel.portrait.y);
 node.prop.s.s(u0, apps0, 1);
 node.prop.y.s(u0, apps0, 0);
};
if (display.is.landscape) {
 m metrics0;
 node.prop.s.s(u0, ide0, m.ide.landscape.s);
 node.prop.x.s(u0, ide0, m.ide.landscape.x);
 node.prop.y.s(u0, ide0, m.ide.landscape.y);
 
# node.prop.s.s(u0, panel0, 0.8);
 node.prop.s.s(u0, panel0, 1);
 node.prop.x.s(u0, panel0, metrics0.panel.landscape.x); 
 node.prop.y.s(u0, panel0, metrics0.panel.landscape.y);

 node.prop.s.s(u0, apps0, 0.47);
 node.prop.y.s(u0, apps0, 330);
# node.prop.s.s(u0, apps0, 0.533);
# node.prop.y.s(u0, apps0, 260);
};

# UI ORIENTATION ]


if (r0) {
 if (BOOT.IDE) {
  os.main.ide.new(ide0, 0,525,1, 600,400);
 };
};

if (BOOT.IDE) {
 node.z.to.front(u0, ide0,0);
};

if (r0) {
 if (BOOT.PANEL) {
#  os.main.panel.new(panel0, 0,925,1, 768,100);
  m metrics0.panel.portrait;
  os.main.panel.new(panel0, m.x,m.y,1, m.w,m.h);
 };
};


if (BOOT.PANEL.TOP*BOOT.PANEL) {
 node.z.to.front(u0, panel0,0);
};

ide.toggle.console {
 ide.common 15510;
 _ @ide.common;

 if (OPEN.IDE.STARTUP==0) {
  events.push(u0, ide.pool,0, ev.ide.event.open.console, 0, 0,0,0);
 };
};

if (r0) {
 ide.toggle.console;
};

test.monitor.old 5590;
_ @test.monitor.old;

#system.monitor.init(0, 850);

# livenotify [

if (r0) {
 _ @1100;
 _ @util.livenotify;

# notify0:=livenotify.log.v(0, S.print.cell0, cell0);
# livenotify.log.v(0, S.print.cell0, cell0);
 livenotify.log.v(0, Animation.CPU.v1, cell0);
 livenotify.log.v(0, SMART.DEVELOPERS, cell0);
# livenotify.log.v(0, Developer.console, cell0);
# livenotify.log.v(0, S.format.value0, 123);

# livenotify.log.v(0, A.HAPPY.BIRTHDAY, cell0);
# livenotify.log.v(0, A.SUPER.COOL, cell0);
# livenotify.log.v(0, A.MEGA.LVL80, cell0);
# livenotify.log.v(0, A.THE.BEST, cell0);
# livenotify.log.v(0, A.HEROLESSUS, cell0);
};

# livenotify ]


# OS/IDE ]
# keyboard [



keyboard.hide.button 15822;
#node.new.this.ex4(r0, keyboard.hide.button,0,0,0,0);

HEROLESSUS 10009000;
# node.new.this.ex(r0, HEROLESSUS, 0);

if (BOOT.WALLET) {
 new.wallet;
};

BOOTLOADER 8000000;
#node.new.this.ex(r0, BOOTLOADER, 0);

#node.new.this.ex(r0, ACPU.STUDIO, 0);
#node.new.this.ex(r0, HIPSTER.BANNER, 0);

# keyboard ]

ABOT 1500;
# node.new.this.ex(r0, ABOT, 0);
#u23:=u14;

_ @1010;
_ @sys.llog;

llog.step(u0);
ll0 r0;
llog.begin(ll0, S.livelogging.main);
llog.print(ll0, S.BOOT);
llog.end(ll0);

_ @sys.livelog2;
llog2.step(u0);
l11;

# touch debug should be lastest node [
touchnid0 0;
if (BOOT.TOUCH.DEBUG) {
 TOUCH.DEBUG 1006;
 touchnid0:=node.new.this.ex(r0, TOUCH.DEBUG, 0);
};
# touch debug should be lastest node ]

# CPU STEP [

cpu.debug.errors.console(r0, 1);
cpu.debug.errors.enabled(r0, 1);
cpu.debug.log.to.xcode.console(r0, 1);
cpu.debug.log.to.console(r0, 1);

cpu.step(u0);

# CPU STEP ]
# VIDEO RECORD [

test.media.texture 5400;
#l0:=node.new.this.ex(r0, test.media.texture, 0);

# VIDEO RECORD ]

# BOOT ]

fly.box {
 _ @1100010;
 _ @ml.box2d;
 l0:=node.new.this.ex(u0, ml.fly.text, 0);
#    node.prop.x.s(u0, l0, node.prop.x.g(u0,bn1));
#    node.prop.y.s(u0, l0, node.prop.y.g(u0,bn1)/2);
 node.prop.x.s(u0, l0, 100);
 node.prop.y.s(u0, l0, 100);
};

# KEYBOARD [

_ @ide.common;
_ @keyboard.common;

kbd0.awsd 0;
kbd1.text 0;

node.prop.visible.toggle 
# u0, nid
 s(_0,_1, if(g(_0,_1),0,1));

display.keyboard.toggle {
 # kbd, type, mode
 kbd0 _0;
 type0 _1;
 mode _2;
 if (kbd0==0) {
  kbd0:=node.new.this.ex4(u0, os.keyboard, type0, 0,0,0);
  node.prop.visible.s(u0, kbd0, 0);
 };

 if (mode == -1) {
  node.prop.visible.toggle(u0, kbd0);
 };
 if (mode >= 0) {
  node.prop.visible.s(u0, kbd0, mode);
 };
 visible=node.prop.visible.g(u0, kbd0);
 node.set.running(u0, kbd0, visible);
 node.set.process.children(u0, kbd0, visible);
};

display.keyboard.update {
 # kbd, mode
 kbd0 _0;
 mode _1;
 node.z.to.front(u0, kbd0, 0);

 kw node.prop.w.g(u0, kbd0);
 kh node.prop.h.g(u0, kbd0);

 if (mode == 0) {
  pos.x = metrics0.vw - kw;
  pos.y = metrics0.vh / 2 - kh;

  node.prop.x.s(u0, kbd0, pos.x);
  node.prop.y.s(u0, kbd0, pos.y);
 };
 if (mode == 1) {
  pos.x = (metrics0.vw - kw) / 2;
  pos.y = 16;

  node.prop.x.s(u0, kbd0, pos.x);
  node.prop.y.s(u0, kbd0, pos.y);
 };
};

#display.keyboard.toggle;

if (r0) {
#  display.keyboard.toggle(kbd0.awsd, keyboard.type.awsd, 1);
 if (SHOW.KEYBOARD==1) {
  events.push(r0, events.pool.boot,0, boot.event.toggle.keyboard, 1,1,0,0);
  events.push(r0, events.pool.boot,0, boot.event.toggle.keyboard, 1,0,0,0);
 };
};

display.keyboard.update(kbd0.awsd, 0);
display.keyboard.update(kbd1.text, 1);

keyboard.switch {
 # mode, kbd
 #  mode: -1 - toggle, 0 - off, 1 - on
 #  kbd: 0 - default, 1 - awsd, 2 - texxt
 mode _0;
 kbd _1;
 if (kbd == 0) {
# display.keyboard.toggle(kbd0.awsd, keyboard.type.awsd);
  display.keyboard.toggle(kbd1.text, keyboard.type.text, mode);
 };
 if (kbd == 1) {
  display.keyboard.toggle(kbd0.awsd, keyboard.type.awsd, mode);
 };
 if (kbd == 2) {
  display.keyboard.toggle(kbd1.text, keyboard.type.text, mode);
 };
};

# KEYBOARD ]
# HACKERNEWS [

_ @hackernews;

hn0 0;

toggle.hackernews {
 show {
  new.hackernews.view(hn0, w-500,0,500,500);
 };
 hide {
  node.prop.lt.s(u0, hn0, 0.001);
  hn0:=0;
 };

 if (hn0, hide, show);
};

# HACKERNEWS ]
# LLOG CORE [

llog2core0 0;
llog2data0 0;

toggle.llog2core {
 show {
  new.livelog.view(llog2core0, 0,0,1, 500,500, livelog2.core);
  new.livelog.view(llog2data0, 500,0,1, 500,500, livelog2.data);
 };
 hide {
  node.prop.lt.s(u0, llog2core0, 0.001);
  llog2core0:=0;
  node.prop.lt.s(u0, llog2data0, 0.001);
  llog2data0:=0;
 };

 if (llog2core0, hide, show);
};

# HACKERNEWS ]
# UI MOVE.UI [

toggle.move.ui {
 moving=llog2.get.attribute.v(u0, livelog2.data,A.UI.move.layout, Move);
 llog2.set.attribute.v(u0, livelog2.data,A.UI.move.layout, Move, if(moving,0,1));
 toggle.llog2core;
# toggle.hackernews;
};

# UI MOVE.UI ]
# EVENTS [

#boot0 ::= 0;

bootloader0 0;

boot.pool 420042;

_ @1010;
_ @sys.obj;
_ @sys.os;
_ @ul.ui;
_ @os.util2;
_ @sys.storage;

process.node.events {
 process.event {
  # ev, o0... - event
  if (_0==boot.event.connect) {

   peer0 d7;
   peer0:=o0;
   connect.peer {
    ip0 buffer.get(u0, peer0,3, 0);
    ip1 buffer.get(u0, peer0,3, 1);
    ip2 buffer.get(u0, peer0,3, 2);
    ip3 buffer.get(u0, peer0,3, 3);
    port buffer.get(u0, peer0,2, 0);
    net.host(ip0,ip1,ip2,ip3, port);

#       _ @4;
#    ui.value1(l10,100,110,0.5,ip0);
#    ui.value1(l12,170,110,0.5,ip1);
#    ui.value1(l13,240,110,0.5,ip2);
#    ui.value1(r8,310,110,0.5,ip3);
#    ui.value1(r9,380,110,0.5,port);

   };
   connect.peer;

   fly.box;
  };
  if (_0==boot.event.restore) {
   peer0 d7;
   peer0:=o0;
   name d8;

   name:=buffer.clone(u0, peer0,1);
#    ui.value1(l10,100,110,0.5,peer0);

   # llog reset [

   llog.reset {
    llog.b(build);
    llog.erase(u0, 0);
    llog.pv(RESET,1);
    llog.e();
    llog.b(errors);
    llog.erase(u0, 0);
    llog.pv(RESET,1);
    llog.e();
   };

   # llog reset ]

   llog.reset;

   storage.backup.restore(name, 0);

   fly.box;
  };

  if (_0==boot.event.record.video.screen) {
   l0:=node.new.this.ex(u0, test.media.texture, 0);
  };
  if (_0==boot.event.record.video.stop) {
  };

  if (_0==boot.event.open.bootloader) {
   bootloader0:=node.new.this.ex(u0, BOOTLOADER, 0);
  };

  if (_0==boot.event.apps.run) {
   _ @sys.os;
   _ @os.apps;
   apps0:=node.new.this.ex(u0, os.apps.run, 0);
   node.z.to.back(u0, apps0, 0);
  };
  if (_0==boot.event.toggle.keyboard) {
   # mode, kbd
   #  mode: -1 - toggle, 0 - off, 1 - on
   mode = o0;
   kbd = o1;
   keyboard.switch(mode, kbd);
  };
  if (_0==boot.event.toggle.hn) {
   toggle.hackernews;
  };
  if (_0==boot.event.move.ui) {
   toggle.move.ui;
  };

  if (_0==boot.run.dota) {
   run.dota;
  };
  if (_0==boot.run.hero) {
   run.nebula;
  };
  if (_0==boot.run.paint) {
   run.paint;
  };
  if (_0==boot.run.wallet) {
   run.wallet;
  };
  if (_0==boot.run.neo) {
   run.neo;
  };
 };

 tmp0 d58;
 ui.event.process3(tmp0, boot.pool,0, process.event);
};

process.node.events;
process.node.events; # due bug / twice

#events.push(r0, boot.pool,0, boot.event.apps.run, 0,0,0,0);
if (BOOT.BOOTLOADER) {
 events.push(r0, boot.pool,0, boot.event.open.bootloader, 0,0,0,0);
};

# bootloader front/back [

node.prop.z.order.s(u0, bootloader0, BOOT.BOOTLOADER.Z);

# bootloader front/back ]

#events.push(r0, boot.pool,0, boot.event.open.bootloader, 0,0,0,0);
#   apps0:=node.new.this.ex(r0, os.apps.run, 0);
#   node.new.this.ex(u0, BOOTLOADER, 0);

# EVENTS ]
# VIDEO REC [

rec.nodes {
 _ @93000;

 pos.landscape {x 1070; y 100;};
 pos.portrait {x 700; y 100;};

 pos1 pos.landscape;
 pos0 pos.portrait;

# new.node0(r0, nodes.group.rec, pos0.x,pos0.y,0.5,500,500, 0,0,0,0);
 node0=new.node0(r0, nodes.group.rec, pos1.x,pos1.y,0.5,500,500, 0,0,0,0);
};

rec.nodes.update {
 node.z.to.front(u0, node0,0);
};

if (BOOT.REC.NODES) {
 if (r0) {
  rec.nodes;
 };
 rec.nodes.update;
};

# VIDEO REC ]
# demo ua30 [

if (0) {
 new.ui.shader.node(d0, 000,0,2, 768/2,1024/2, 1, 70014,28556); # 
new.text.label1b
 # hid, x,y,s, text, size
# new.text.label(_0, _1,_2,_3, _4, _5, 0,0,0, shaders1.text0.vsh,29011, 0);
# new.text.label(_0, _1,_2,_3, _4, _5, 1001,3,9, shaders1.text0.vsh,29011, 0);
# new.text.label(_0, _1,_2,_3, _4, _5, 1001,4,4, 29000,29012, 0);
# new.text.label(_0, _1,_2,_3, _4, _5, 1001,4,4, 29000,29013, 0);
# new.text.label(_0, _1,_2,_3, _4, _5, 1001,4,4, 29000,29014, 0);
# new.text.label(_0, _1,_2,_3, _4, _5, 1001,4,4, 29000,29015, 0);
 new.text.label(_0, _1,_2,_3, _4, _5, 1001,4,4, 29000,29016, 0);

# new.text.label1b(d0, 50,500,1, S.ua30, 45);
# new.text.label1b(d0, 50,500,1, S.ua30, 60);
# new.text.label1b(d0, 280,570,1, S.ua30a, 50);
# new.text.label1b(d0, 280,510,1, S.ua30b, 50);
# new.text.label1b(d0, 50,500,1, S.ua30c, 160);
 new.text.label1b(d0, 230,620,1, S.ua30a, 70);
 new.text.label1b(d0, 50,510,1, S.ua30b, 70);
 new.text.label1b(d0, 290,340,1, S.ua30c, 160);
};

# demo ua30 ]

setup.bg {
sn0 0;
if (r0) {
# new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28418); # universe53
 #new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28390); # universe.space1
# new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28417); # fractals25
 new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28275); # bg
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28330); # g.club.lights1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28282); # rainbow.clouds
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28287); # world.future1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28286); # matrix2
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28290); # fractal.crystal1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28303); # sin.waves2
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28308); # waves.f4d
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28311); # bulb.spheres3d
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28314); # minions2
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28320); # rabbit.hole2
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28338); # bubles42
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28340); # awake

##new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28324); # z.lazer.time DOTA


#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28749); # the.time

#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28751); # spiral.galaxy
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28752); # galaxy52
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28753); # neon.portal53
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28754); # circle.bg54
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28755); # portal55
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28756); # lines.bg56
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28757); # gold.ring
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28758); # robo.hand58
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28759); # barbie.clouds

#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28761); # dota.cube
#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28762); # loading62
#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28763); # dota.hero.bg63

#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28764); # dota.hero.bg64
#new.ui.shader.node(sn0, 0,200,2, 768/4,1024/4, 1, 70014,28765); # lazer.good.slow

#i=0;while(i<100) {
#new.ui.shader.node(sn0, 0+rnd(u0)*500,200,1, 768/2,1024/2, 1, 70014,28766); # 
i+=1;
#};

_ @basic.ui.shader.node3.inc;


#new.ui.shader.node3(sn2sign, -100,415-200,2, 300,300, 70014,28771); # 

#new.ui.shader.node3(sn0, 0,220,1, 500,500, 70014,28766); # neon.lines.test
#new.ui.shader.node3(sn1lines, 0,420,1, 300,300, 70014,28768); # neon.lines.dyn

# NEON DYN2 [

 _ @basic.poly2d.test;
 #poly2d.test0;

sn2poly 0;

 new.poly2d(sn2poly, 0,420,1, 300,300);
 poly2d.figure1(sn2poly);
 poly2d.figure1.color1(sn2poly);

#new.ui.shader.node3(sn2poly, 0,420,1, 300,300, 70014,28781); # poly2d.dyn

#shader.set.uniformi.v2(sn2poly, A.lineXY, 0, -0.46,0.26);
#shader.set.uniformi.v2(sn2poly, A.lineXY, 1, 0.46,0.26);
#shader.set.uniformi.v2(sn2poly, A.lineXY, 2, 0,-0.5);
#shader.set.uniformi.v2(sn2poly, A.lineXY, 3, -0.46,0.26);
#shader.set.uniformi.v2.count(sn2poly, A.lineXY, 4);

#shader.set.uniformi.v4(sn2poly, A.lineColor, 0, 1.2,1.2,0, 1);
#shader.set.uniformi.v4(sn2poly, A.lineColor, 1, 1.2,0,1.2, 1);
#shader.set.uniformi.v4(sn2poly, A.lineColor, 2, 0,1.2,0, 1);
#shader.set.uniformi.v4(sn2poly, A.lineColor, 3, 0,0,1, 1);
#shader.set.uniformi.v4.count(sn2poly, A.lineColor, 4);

_ @basic.lines2d.test;
# new.lines2d(sn1lines, 0,420,1, 300,300);
# lines2d.figure1(sn1lines);
# figure2(sn1lines);
# lines2d.figure1.color1(sn1lines);

vv99;

lines2d.test0;
vv99;
#sn1lines 0;
#new.ui.shader.node3(sn1lines, 0,420,1, 300,300, 70014,28780); # neon.lines.dyn2

#lines2d.figure1(sn1lines);

#shader.set.uniformi.v4(sn1lines, A.lineColor, 0, 1.2,0,1.2, 1);
#shader.set.uniformi.v4(sn1lines, A.lineColor, 1, 1,1,0, 1);
#shader.set.uniformi.v4(sn1lines, A.lineColor, 2, 1,1,0, 1);
#shader.set.uniformi.v4.count(sn1lines, A.lineColor, 3);

#shader.set.uniformi.v2(sn1lines, A.lineXY, 0, -0.46,0.26);
#shader.set.uniformi.v2(sn1lines, A.lineXY, 1, 0.46,0.26);
#shader.set.uniformi.v2(sn1lines, A.lineXY, 2, 0,-0.5);
#shader.set.uniformi.v2(sn1lines, A.lineXY, 3, -0.46,0.26);
#shader.set.uniformi.v2.count(sn1lines, A.lineXY, 4);

#shader.set.uniformi.v4(sn1lines, A.lineColor, 0, 1.2,1.2,0, 1);
#shader.set.uniformi.v4(sn1lines, A.lineColor, 1, 1.2,0,1.2, 1);
#shader.set.uniformi.v4(sn1lines, A.lineColor, 2, 0,1.2,0, 1);
#shader.set.uniformi.v4(sn1lines, A.lineColor, 3, 0,0,1, 1);
#shader.set.uniformi.v4.count(sn1lines, A.lineColor, 4);

shader.set.uniform.v4(sn1lines, A.backgroundColorAdd, 0.0, -0.5, -0.9, 0);
#shader.set.uniform.v4(sn1lines, A.backgroundColorAdd, 0.5, -0.5, -0.9, 0);




# NEON DYN2 ]

#new.ui.shader.node3(sn2sign, 0,420,1, 300,300, 70014,28769); # hero.sign
#hero.sign.color.purple1(sn2sign);

hero.sign.create {
 # hid, x,y,s, w,h
 new.ui.shader.node3(_0, _1,_2,_3, _4,_5, 70014,28769); # hero.sign
 hero.sign.color.purple1(_0);
};

#hero.sign.create(sn2sign, 0,420,1, 300,300);

new.ui.shader.node3(sn0, 0,415,1.25*2, 32/2,32/2, 70014,28770); # neon.heart
#new.ui.shader.node3(sn2sign, -100,415-200,2, 300,300, 70014,28770); # neon.heart

#new.ui.shader.node3(sn2sign, 100,415,2.5, 16*2,16*2, 70014,28776); # sword76
new.ui.shader.node3(sn0, 50,415,2.5, 16,16, 70014,28776); # sword76


new.ui.shader.node3(sn0, 100,415,2.5, 16,16, 70014,28777); # metamorphosis777


new.ui.shader.node3(sn0, 0,200,1, 500,100, 70014,28772); # prism72

new.ui.shader.node3(sn0, 0,300,1, 100,100, 70014,28773); # golden.piggy

new.ui.shader.node3(sn0, 100,300,1, 100,100, 70014,28775); # x.good1
#new.ui.shader.node3(sn2sign, 200,300,1, 100,100, 70014,28776); # sword76

new.ui.shader.node3(sn0, 200,300,1, 100,100, 70014,28778); # fly78

new.ui.shader.node3(sn0, 200,300,1, 100,100, 70014,28779); # 

#new.ui.shader.node3(sn2sign, 0,300,1, 500,500, 70014,28773); # golden.piggy

many.signs {
 i=0;while(i<10){
  new.ui.shader.node3(sn2sign, 0+rnd(u0)*200,220+rnd(u0)*400,0.1+rnd(u0)*1, 300,300, 70014,28769); # hero.sign
# hero.sign.color(sn2sign, rnd(u0),rnd(u0),rnd(u0), rnd(u0),rnd(u0),rnd(u0), rnd(u0),rnd(u0),rnd(u0));
  hero.sign.color.orange1(sn2sign);

  i+=1;
 };
};
#many.signs;

};
};

_ @sys.shader.ex;

sn1lines 0;
sn2sign 0;

# HERO SIGN [

hero.sign.color {
 # nid, r,g,b, r,g,b, r,g,b
 shader.set.uniform.v3(_0, A.c1, _1, _2, _3);
 shader.set.uniform.v3(_0, A.c2, _4, _5, _6);
 shader.set.uniform.v3(_0, A.c3, _7, _8, _9);
};

hero.sign.color.purple1
 # nid
 color(_0, 0.05, 0.94, 0.58,  0.03, 0.47, 0.93,  0.4, 0.15, 0.95);

hero.sign.color.purple2
 # nid
 color(_0, 0.94, 0.05, 0.65,  0.85, 0.15, 0.35,  0.4, 0.15, 0.95);

hero.sign.color.purple3
 # nid
 color(_0, 0.2, 0.05, 0.95,  0.4, 0.05, 0.9,  0.25, 0.6, 0.93);

hero.sign.color.orange1
 # nid
 color(_0, 0.95, 0.6, 0.05,  0.93, 0.4, 0.03,  0.8, 0.2, 0.05);

hero.sign.color.rgb1
 # nid
 color(_0, 1,0,0, 0,1,0, 0,0,1);

hero.sign.color.purple4
 # nid
 color(_0, 0.6, 0.05, 0.93,  0.4, 0.03, 0.95,  0.1, 0.4, 0.9);

hero.sign.color.green1
 # nid
 color(_0, 0.7,1,0, 0,1,0, 0,0.5,0);

#hero.sign.color.purple1(sn2sign);
#hero.sign.color.purple2(sn2sign);
#hero.sign.color.purple3(sn2sign);
#hero.sign.color.orange1(sn2sign);
#hero.sign.color.rgb1(sn2sign);
hero.sign.color.purple4(sn2sign);
#hero.sign.color.green1(sn2sign);

# HERO SIGN ]


#shader.set.uniform.v2(sn1lines, iResolution1, 300,300);
#shader.set.uniformi.v2.count
 # uid, name, n
# obj.key.set2(u0, 2, _0,_1,0, 2,_2);
shader.set.uniformi.v2(sn1lines, iResolution1, 0, 300,300);
shader.set.uniformi.v2(sn1lines, iResolution1, 1, 500,300-rnd(u0)*200);
shader.set.uniformi.v2.count(sn1lines, iResolution1, 2);

#shader.set.uniformi.v2(sn1lines, A.lineXY, 0, -0.5+0.5*sin(t),0);
#shader.set.uniformi.v2(sn1lines, A.lineXY, 1, 0.1,0.2);



# GALLACTIC AVATARS DEMO [

avatar.mel0 0;

avatars {
 sn0=0;
# new.ui.shader.node(sn0, 00,00,2, 768/8/4,1024/8/4, 1, 70014,28392); # avatar.hoody1
 new.ui.shader.node(sn0, 00,00,2, 768/8,1024/8, 1, 70014,28392); # avatar.hoody1
 avatar.mel0:=sn0;
 if (SHOW.UFO) {
 new.ui.shader.node(sn0, 200,300,1, 768/2,512/2, 1, 70014,28391); # ufo1
 };
 if (SHOW.WALLEE) {
 new.ui.shader.node(sn0, 450,100,1, 768/2,1024/2, 1, 70014,28285); # wallee1
 };
};

demo0 {

if (r0) {
 sn0 d0;
 new.ui.shader.node(sn0, 00,0,2, 768/2,1024/2, 1, 70014,28390); # universe.space1
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28418); # universe53
# new.ui.shader.node(sn0, 000,0,2, 768/2,1024/2, 1, 70014,28553); # sphere.mut53
# new.ui.shader.node(sn0, 00,0,4, 768/4,1024/4, 1, 70014,28396); # stones.circle3d
 new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28415); # galaxy99(tex0)
 if (SHOW.AVATARS1) {
  avatars;
 };
};
};
if (BOOT.DEMO0) {
 demo0;
};

if (r0) {
 if (SHOW.AVATARS1==2) {
  avatars;
 };
};

# GALLACTIC AVATARS DEMO ]
# TEST VIDEO [

test.main.video 1690;

if (r0) {
 if (VIDEO.PLAYER) {
  vid0=node.new.this.ex(u0, test.main.video, 0);
 };
};

# TEST VIDEO ]

k:=1;

_ @92000;

_ @1010;
_ @sys.node;
_ @sys.os;
_ @os.basic;
_ @os.basic.ui;
_ @os.util0;
_ @os.util2;
_ @sys.obj;

_ @sys.os;
_ @os.basic;

if (r0) {
#sn0 l12;
#new.ui.shader.node(sn0, 000,0,4, 768/4,1024/4., 1, 70014,28520); # 
};

_ @4;
#uiv0 0;
#if (r0) {
# uiv0:=0;
#};
#ui.value1(uiv0,110,110,0.5,port+t);
#   uiv0=if(r0,0,uiv0);
#uiv0=uiv0;

#   ui.value1(uiv0,110,110,0.5,port+t);

#   _ @4;
#   ui.value1(l12,110,110,0.5,port);
#   ui.value1(l12,110,110,0.5,bootnid);



#new.wallet;


if (BOOT.PANEL.TOP*BOOT.PANEL) {
 node.z.to.front(u0, panel0,0);
};

if (touchnid0) {
 node.z.to.front(u0, touchnid0,0);
# node.prop.z.order.s(r0, touchnid0, 100000);
};


_ @4;
ee0 0;ui.value1(ee0,100,0,0.5,metrics0.vw);
ee0 0;ui.value1(ee0,100,25,0.5,metrics0.vh);
ee0 0;ui.value1(ee0,100,50,0.5,metrics0.portrait.w);
ee0 0;ui.value1(ee0,100,75,0.5,metrics0.portrait.h);
