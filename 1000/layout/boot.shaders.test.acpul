### boot.shaders.test


setup.bg {

_ @photoneo.common.gl.extra;

sn0 0;
if (r0) {
# new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28418); # universe53
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28390); # universe.space1
# new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28417); # fractals25
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28275); # bg
# new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28330); # bg.club.lights1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28282); # rainbow.clouds
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28287); # world.future1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28286); # matrix2
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28290); # fractal.crystal1
# new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28303); # sin.waves2
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28308); # waves.f4d
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28311); # bulb.spheres3d
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28314); # minions2
#new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28320); # rabbit.hole2
#new.ui.shader.node(sn0, 0,0,4, 768/4,1024/4, 1, 70014,28338); # bubles42
##new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28340); # awake

##new.ui.shader.node(sn0, 0,0,1, 768/1,1024/1, 1, 70014,28324); # z.lazer.time DOTA


#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28749); # the.time

#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28751); # spiral.galaxy
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28752); # galaxy52
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28753); # neon.portal53
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28754); # circle.bg54
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28755); # portal55
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28756); # lines.bg56
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28757); # gold.ring
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28758); # robo.hand58
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28759); # barbie.clouds

#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28761); # dota.cube
#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28762); # loading62
#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28763); # dota.hero.bg63

#new.ui.shader.node(sn0, 0,200,1, 768/2,1024/2, 1, 70014,28764); # alpha dota.hero.bg64
#new.ui.shader.node(sn0, 0,200,2, 768/4,1024/4, 1, 70014,28765); # lazer.good.slow

#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28799); # minecraft99
#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28800); # minecraft800

#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28810); # spheres (not work)

#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28831); # in.yan
#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28834); # Turbilhão
new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28836); # nn1.super
#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28837); # Origami
#new.ui.shader.node(sn0, 0,0,1, 1024,768, 1, 70014,28838); # starsfield38.cool

#new.ui.shader.node3(sn0, 0,300,1, 500,500, 70014,28839); # clouds39

# exp5X
#new.ui.shader.node3(sn0, 0,300,1, 700,500, 70014,28821); # deephole21
#new.ui.shader.node3(sn0, 0,300,1, 700,500, 70014,28822); # neon22
#new.ui.shader.node3(sn0, 0,300,1, 700,500, 70014,28823); # neonbg23
#new.ui.shader.node3(sn0, 0,300,1, 700,500, 70014,28824); # smiles24

#new.node.common0(sn0, 50,300,1, 300,347, 28839, 1);

#new.ui.shader.node3(sn0, 500,0,3, 100,100, 70014,28840); # galaxy3d.realistic
#new.ui.shader.node3(sn0, 500,0,1, 500,500, 70014,28840); # galaxy3d.realistic
#new.ui.shader.node3(sn0, 500,0,5, 100,100, 70014,28840); # galaxy3d.realistic

#new.ui.shader.node3(sn0, 500,200,1, 300,300, 70014,28850); # warp.universe
#new.ui.shader.node3(sn0, 0,200,1, 500,500, 70014,28850); # warp.universe
#new.ui.shader.node3(sn0, 0,0,2, 1024/2,768/2, 70014,28850); # warp.universe

#new.ui.shader.node3(sn0, 100,100,1.5, 300,300, 70014,28811); # hexagold
#new.ui.shader.node3(sn0, 100,100,1.5, 300,300, 70014,28812); # cubes3d.lag

#new.ui.shader.node3(sn0, 100,100,1.5, 300,300, 70014,28853); # x.vegas53.not.works
#new.ui.shader.node3(sn0, 100,100,1.5, 300,300, 70014,28854); # x.color.circles.not.work

#new.ui.shader.node3(sn0, 100,100,1.5, 300,300, 70014,28852); # dota.rocks52

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28855); # glyph.wheel

## 1
#new.ui.shader.node3(sn0, 0,0,2, 1024/2,768/2, 70014,28850); # warp.universe
#new.ui.shader.node(sn0, 0,0,1, 1024,768, 1, 70014,28838); # starsfield38.cool


test04 {
#new.ui.shader.node(sn0, 0,0,2, 768/2,1024/2, 1, 70014,28303); # sin.waves2
#new.ui.shader.node3(sn0, 0,0,2, 768/2,1024/2, 70014,28873); # dota.jedi.light73
#new.ui.shader.node3(sn0, 0,0,2, 768/2,1024/2, 70014,28877); # *the.way.Kazantip77
#new.ui.shader.node3(sn0, 0,0,2, 768/2,1024/2, 70014,28878); # dota.jedi.light78
#new.ui.shader.node3(sn0, 0,0,2, 768/2,1024/2, 70014,28879); # dota.bg.good79
tex0=node.value.g(u0, sn0,0);

new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28856); # dota.fluid(tex)
shader.set.texture(sn0, A.iChannel0, tex0);
tex2=node.value.g(u0, sn0,0);

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28881); # life.clever81

new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28872); # dota.gem72
tex1=node.value.g(u0, sn0,0);
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28873); # dota.jedi.light73

new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28874); # light.sign.circles74
};
#test04;

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28875); # power.sphere75
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28876); # cat.eyes76

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28878); # dota.jedi.light78
#new.ui.shader.node3(sn0, 000,100,1, 300*2,300*2, 70014,28879); # dota.bg.good79

#new.ui.shader.node3(sn0, 000,100,1, 300*2,300*2, 70014,28880); # many.balls80
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28881); # life.clever81

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28883); # dota.fire83
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28882); # dota.fire82
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28884); # dota.boom84
#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28885); # dota.boom85

# MIX.IN

sn05 0;
test05 {
new.ui.shader.node3(sn05, 200,100,0.5, 300,300, 70014,28890); # mix.in2.alpha
shader.set.texture(sn05, A.iChannel0, tex1);
shader.set.texture(sn05, A.iChannel1, tex2);
shader.set.uniform.v(sn05, A.mode, 2);
tex05=node.value.g(u0, sn05,0);

new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28886); # rain86.tex
shader.set.texture(sn0, A.iChannel0, tex05);
#shader.set.texture(sn0, A.iChannel0, tex0);
#shader.set.texture(sn0, A.iChannel0, tex1);
#shader.set.texture(sn0, A.iChannel0, tex2);

new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28900); # fire900.in1
#shader.set.texture(sn0, A.iChannel0, tex0);
#shader.set.texture(sn0, A.iChannel0, tex1);
#shader.set.texture(sn0, A.iChannel0, tex2);
shader.set.texture(sn0, A.iChannel0, tex05);

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28887); # cells87.bad.tex
#shader.set.texture(sn0, A.iChannel0, tex0);
#shader.set.texture(sn0, A.iChannel1, tex1);

#new.ui.shader.node3(sn0, 200,100,1.5, 300,300, 70014,28888); # god8888

#new.ui.shader.node3(sn0, 200,100,1.5*2, 300/2,300/2, 70014,28891); # paint.egypt.texure.orig
};

rabbithole {
# new.ui.shader.node3(sn0, 200,100,1.5*2, 300/2,300/2, 70014,28889); # rabbit.hole89
# new.ui.shader.node3(sn0, 00,00,1.5*2*2, 300/2,300/2, 70014,28889); # rabbit.hole89
# new.ui.shader.node(sn0, 0,0,2, 500/1,500/1, 1, 70014,28320); # rabbit.hole2
#new.ui.shader.node3(sn0, 0,200,1, 500,500, 70014,28850); # warp.universe
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28754); # circle.bg54
#new.ui.shader.node(sn0, 0,0,2, 768/1,1024/1, 1, 70014,28755); # portal55
#new.ui.shader.node(sn0, 0,300,1, 500,500, 1, 70014,28834); # Turbilhão
#new.ui.shader.node3(sn0, 300,300,1, 300,300, 70014,28821); # deephole21
 new.ui.shader.node3(sn0, 00,300,1*2, 300/2,300/2, 70014,28889); # rabbit.hole89
 new.ui.shader.node(sn0, 600,300,0.7, 500/1,500/1, 1, 70014,28320); # rabbit.hole2
new.ui.shader.node3(sn0, 300,300,1, 300,300, 70014,28850); # warp.universe

new.ui.shader.node3(sn0, 400,100,2, 100,100, 70014,28819); # dota.skill.crystal.light

new.ui.shader.node3(sn0, 0,0,2, 100,100, 70014,28920); # dota.skill.rabbithole

};
#rabbithole;

#_ @basic.poly2d.test;
#_ @basic.lines2d.test;
#_ @hero.sign1.test;


# SIGN TEST [

# _ @hero.sign1.test;
#hero.sign1.test0;

#hero.sign.create(sn2sign, 0,420,1, 300,300);

#new.ui.shader.node3(sn2sign, 0,300,1, 500,500, 70014,28773); # golden.piggy
many.signs {
 i=0;while(i<10){
  new.ui.shader.node3(sn2sign, 0+rnd(u0)*200,220+rnd(u0)*400,0.1+rnd(u0)*1, 300,300, 70014,28769); # hero.sign
# hero.sign.color(sn2sign, rnd(u0),rnd(u0),rnd(u0), rnd(u0),rnd(u0),rnd(u0), rnd(u0),rnd(u0),rnd(u0));
  hero.sign.color.orange1(sn2sign);

  i+=1;
 };
};
#many.signs;

# SIGN TEST ]

voxel3d {
 new.ui.shader.node3(sn0, 0,00,2, 500,500, 70014,28785); # voxel3d
};
#voxel3d;

vv100;
testtex0 0;
#new.node.common0(testtex0, 500,0,1, 300,300, node.fid.by.name(u0, sys.test.textures), 0);

mel0 0;
#new.node.common0(mel0, 0,0,1, 768/8*2,1024/8*2, node.fid.by.name(u0, ai.chat.avatar.mel), 0);

testtex1 0;
#new.node.common0(testtex1, 100,200,1, 300,300, node.fid.by.name(u0, ai.chat.dialog), 0);
#node.prop.z.order.s(u0, testtex1, 1000);

#dota1 0;
#new.node.common0(dota1, 0,200,1, 300,300, node.fid.by.name(u0, dota.dialog.test), 0);
#node.prop.z.order.s(u0, dota1, 1000);

# ChatGPT

gpt0 0;
#new.node.common0(gpt0, 500,0,1, 300,300, node.fid.by.name(u0, gpt.chat.test), 0);

#new.ui.shader.node3(sn0, 0,00,2, 500,500, 70014,28801); # pix.eq
#new.ui.shader.node3(sn0, 0,00,2, 500,500, 70014,28802); # fractal802

clockpatek0 0;
#new.node.common0(clockpatek0, 50,300,1, 300,347, node.fid.by.name(u0, patek.philippe.clock), 1);

waterfall0 0;
#new.node.common0(waterfall0, 0,0,1, 1000,1000, node.fid.by.name(u0, waterfall.test), 1);

#new.ui.shader.node3(sn0, 0,00,2, 500,500, 70014,28935); # dota.harmony.lines
#new.ui.shader.node3(sn0, 0,00,2, 500,500, 70014,28936); # painted.skies
#new.ui.shader.node3(sn0, 0,00,0.5, 1000,1000, 70014,28936); # painted.skies

new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28937); # dota.magic.pyramid
#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28938); # dota.pyramid2
#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28939); # dota.skill.hypno
#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28930); # dota.skill.magic.ball

#new.ui.shader.node3(sn0, 0,0,1, 200,200, 70014,28940); # dota.skill.trangle.buggy
tex1=node.value.g(u0, sn0,0);

new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28941); # dota.effect.lighting
tex0=node.value.g(u0, sn0,0);

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28942); # dota.effect.sparkles
#shader.set.uniform.v2(sn0, A.iResolution, 110,110); # sparkles.size
#shader.set.uniform.v2(sn0, A.iResolution, 1110,1110);

#new.ui.shader.node3(sn0, 0,0,10, 50,50, 70014,28942); # dota.effect.sparkles
#shader.set.uniform.v2(sn0, A.iResolution, 110,110); # sparkles.size
#tex0=node.value.g(u0, sn0,0);
#gl.texture.filter.linear(tex0);

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28943); # dota.effect.light43
#new.ui.shader.node3(sn0, 0,0,1, 1100,800, 70014,28943); # dota.effect.light43

#new.ui.shader.node3(sn0, 0,0,1, 1100,800, 70014,28944); # dota.effect.nebula44
#new.ui.shader.node3(sn0, 0,0,2, 1100/2,800/2, 70014,28944); # dota.effect.nebula44
#new.ui.shader.node3(sn0, 0,0,2, 1100/2,800/2, 70014,28945); # dota.effect.tunnel.stars

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28946); # dota.bg.crystals46

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28947); # dota.effect.hypno47
#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28948); # dota.effect.buff48

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28949); # dota.effect.gravity49
#tex0=node.value.g(u0, sn0,0);

#new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28950); # dota.effect.fractal50
new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28951); # dota.effect.p2p.good

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28952); # dota.building.crunch
#shader.set.texture(sn0, A.iChannel0, tex0);
#shader.set.texture(sn0, A.iChannel1, tex0);

#new.ui.shader.node3(sn0, 500,200,1, 300,300, 70014,28953); # dota.bio.cell53
tex2=node.value.g(u0, sn0,0);

#new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28954); # cosmic.webb54

#new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28955); # dota.effect.gravity.dots

#new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28956); # dota.bg.wobbly.waves.bug.fwidth

#new.ui.shader.node3(sn0, 0,0,2, 500,500, 70014,28957); # dota.effect.tunnel.spirals

#new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28958); # dota.bg.mountain.rain58
#new.ui.shader.node3(sn0, 500,200,1, 500,500, 70014,28959); # dota.bullet.morph59

#new.ui.shader.node3(sn0, 500,200,1, 500,500, 70014,28960); # dota.bg.ipad
#new.ui.shader.node3(sn0, 0,0,1, 1100,800, 70014,28960); # dota.bg.ipad

new.ui.shader.node3(sn0, 00,200,1, 400,400, 70014,28961); # dota.weapon.sword2
new.ui.shader.node3(sn0, 100,200,1, 100,200, 70014,28961); # dota.weapon.sword2
node.anchor.point.s1(u0, sn0, 0.5,0.5);
node.prop.r.s(u0, sn0, 30);
#sn0rr:=sn0;

g1 {
new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28970); # dota.
shader.set.texture(sn0, A.iChannel0, tex2);
shader.set.texture(sn0, A.iChannel1, tex1);
shader.set.texture(sn0, A.iChannel2, tex0);
shader.set.texture(sn0, A.iChannel3, tex0);
};
#g1;

new.ui.shader.node3(sn0, 0,0,1, 500,500, 70014,28970); # dota.
shader.set.texture(sn0, A.iChannel0, tex1);
shader.set.texture(sn0, A.iChannel1, tex1);
shader.set.texture(sn0, A.iChannel2, tex1);
shader.set.texture(sn0, A.iChannel3, tex1);

#new.ui.shader.node3(sn0, 0,0,1, 200,200, 70014,28940); # dota.
#new.ui.shader.node3(sn0, 0,0,1, 200,200, 70014,28940); # dota.
#new.ui.shader.node3(sn0, 0,0,1, 200,200, 70014,28940); # dota.

#new.ui.shader.node3(sn0, 0,00,4, 250,250, 70014,28936); # painted.skies

};
};

#sn0rr 0;
#rr 0;
#rr+=1;
#node.prop.r.s(u0, sn0rr, rr);



### waterfall.test

_ @1111;
_ @4;
_ @photoneo.common.gl.extra;
_ @sys.shader.ex;
_ @basic.ui.shader.node3.inc;

# WATERFALL [

waterfall {
 #28931
 #iChannel0
# tw 500; th 500; ss 0.3;
# tw 200*2; th 200*2; ss 1/2;
 tw 200;
 th 200;
 ss 1;
 sn0 0;
 sn1 0;
 sn2 0;
 x0 0;
 w0 tw*ss;
 tex0=node.ex.texture.create.fmt(u0, tw,th, node.ex.texture.fmt.rgb8888, 1);
 node.ex.gl.fbo(u0, tex0);
# node.ex.gl.clear(u0, 0,0,1,0);
 node.ex.gl.fbo(u0, -1);

 new.ui.shader.node3(sn0, 0,0,ss, tw,th, 70014,28931); # waterfall31
 shader.set.texture(sn0, A.iChannel0, tex0);
 shader.set.uniform.v3(sn0, A.iMouse, 0,0,0);

 tex1=node.value.g(u0, sn0,0);

 sn00=sn0;
 
 x0+=w0;

 new.ui.shader.node3(sn0, x0,0,ss, tw,th, 70014,28931); # waterfall31
 shader.set.texture(sn0, A.iChannel0, tex1);
 shader.set.uniform.v3(sn0, A.iMouse, 0,0,0);
 tex2=node.value.g(u0, sn0,0);

 sn01=sn0;

 x0+=w0;

# gl.texture.filter.nearest(tex1);
# gl.texture.filter.nearest(tex2);
# gl.texture.filter.linear(tex2);

# new.ui.shader.node3(sn0, 600,100,1, 300,300, 70014,28931); # waterfall31
# shader.set.texture(sn0, A.iChannel0, tex2);
# tex3=node.value.g(u0, sn0,0);

# new.ui.shader.node3(sn0, 000,400,0.5, 300,300, 70014,28931); # waterfall31
# shader.set.texture(sn0, A.iChannel0, tex3);
# tex4=node.value.g(u0, sn0,0);

# new.ui.shader.node3(sn0, 150,400,0.5, 300,300, 70014,28931); # waterfall31
# shader.set.texture(sn0, A.iChannel0, tex4);
# tex5=node.value.g(u0, sn0,0);

# shader.set.texture(sn00, A.iChannel0, tex2);
# shader.set.texture(sn00, A.iChannel0, tex5);

 new.ui.shader.node3(sn0, 400,0,ss*3, tw,th, 70014,28932); # waterfall31.draw
# new.ui.shader.node3(sn0, 600,100,ss, tw,th, 70014,28932); # waterfall31.draw
# new.ui.shader.node3(sn0, 300,400,1, 300,300, 70014,28932); # waterfall31.draw
 shader.set.texture(sn0, A.iChannel0, tex2);
 texA=node.value.g(u0, sn0,0);
# gl.texture.filter.linear(tex1);
# gl.texture.filter.linear(tex2);
# gl.texture.filter.linear(texA);
# gl.texture.filter.nearest(tex1);
# gl.texture.filter.nearest(tex2);
# gl.texture.filter.nearest(texA);

# new.ui.shader.node3(sn1, 300,300,1.5, 300,300, 70014,70031); # copy tex
# shader.set.texture(sn1, A.iChannel0, tex0);
# tex1=node.value.g(u0, sn1,0);
# shader.set.texture(sn0, A.iChannel0, tex1);

};
if (r0) {
 waterfall;
};

waterfall.update {
 qwe 0;
 qwe+=1;
 if (qwe>4) {
  shader.set.texture(waterfall.sn00, A.iChannel0, waterfall.tex2);
 # shader.set.texture(waterfall.sn00, A.iChannel0, waterfall.tex4);
 };
};

waterfall.update;

# WATERFALL ]
# WATERFALL TOUCH [

_ @os.util2;
_ @sys.touch;
_ @sys.events;

pressed 0;
#clicked 0;
#moving 0;

#node.set.visible(u0, pb1, pressed==0);
#node.set.visible(u0, pb2, pressed);

#x0 0; y0 0;
#xs 0; ys 0; 
#dx.max 25;
#dy.max 25;

touch.id 0;
touch.b0 0;

sn0 0;
ss1 waterfall.ss*3;
ss2 ss1/2;

p.x 400;#waterfall.x0;
p.y 0;
p.w waterfall.tw*ss1;
p.h waterfall.th*ss1;


touch.ev {
 mouse.pos
  shader.set.uniform.v3(waterfall.sn00, A.iMouse, (_0-p.x)/ss2,(_1-p.y)/ss2,_2);

 began {
  # x,y, gx,gy

  mouse.pos(_0,_1,1);
#  x0:=_2;
#  y0:=_3;
#  xs:=x0;
#  ys:=y0;
#  new.ui.shader.node3(sn0, _0,_1,1, 500,500, 70014,28773); # golden.piggy
#  shader.set.uniform.v3(waterfall.sn00, A.iMouse, _0+100,100,1);
#  shader.set.uniform.v3(waterfall.sn00, A.iMouse, 300*rnd(u0),100,1);

  pressed:=1;
#  clicked:=1;
 };
 moved {
  # x,y, gx,gy

  mouse.pos(_0,_1,1);
#  xp = x0;
#  yp = y0;

#  # check clicked
#  if ((abs(_3-ys)>dy.max)+(abs(_2-xs)>dx.max)) {
#   clicked:=0;
#   moving:=1;
#  };
#  if (moving) {
#   x+=_2-x0;
#   y+=_3-y0;
#   x0:=_2;
#   y0:=_3;
#  };
 };
 ended {
  # x,y, gx,gy
  mouse.pos(_0,_1,0);

  pressed:=0;
#  moving:=0;

#  click.ended;
 };
};

touch.rect2.lock(touch.id, p.x,p.y,p.w,p.h);
#touch.rect2.lock(touch.id, 0,0,w,h);

#touch.rect2.lock(touch.id, 0,0,500,500);

_ @sys.touch.ev.process.once;
touch.b0:=1;
touch.ev.process.multi;

# WATERFALL TOUCH ]
