### 5400 test.media.texture

_ @0;
_ @BOOT.OPTIONS;

r0:=k==0;

draw(r0, 5401);

_ @1010;
_ @sys.media;
_ @sys.node;
_ @sys.display;

tex r8;
texflip r9;
recording r5;

tex0boot0 u13;
tex0boot1 u14;

tex0src tex0boot0;

tw node.texture.width(tex0src)*rec.scale;
th node.texture.height(tex0src)*rec.scale;

rec.scale r10;

rec.scale:=1;

nseconds VIDEO.REC.SECONDS;

if (r0) {
 display.size(0);
 watch(o0);
 watch(o1);

 pool 5400;
 id 0;
# tex:=media.video.recorder.texture(r0, pool,id, 0, 640,480);
# tex:=media.video.recorder.texture(r0, pool,id, 0, 768,1024/2);
# tex:=media.video.recorder.texture(r0, pool,id, 0, 768,1024);
# tex:=media.video.recorder.texture(r0, pool,id, 0, 800/2,150/2+10);
# tex:=media.video.recorder.texture(r0, pool,id, 0, 800,150);
# texflip:=node.ex.texture.create(u0, 768,1024);
# tex:=media.video.recorder.texture(r0, pool,id, 0, o0,o1);

 tex:=media.video.recorder.texture(r0, pool,id, 0, tw,th);

# texflip:=node.ex.texture.create(u0, 768,1024);
 texflip:=node.ex.texture.create(u0, 768,1024);
 recording+=1;


 media.video.recorder.set.duration(u0, tex, nseconds); 
# media.video.recorder.set.duration(u0, tex, 120); 

 media.twitch.attach.texture(u0, tex);

 media.twitch.set.url(u0, S.live1.twitch.tv);

  media.twitch.stop(u0);
# media.twitch.start(u0);
};

is.end if(STREAM.TWITCH, nseconds, 10000 *300) < t;
if (is.end) {
#if (t > 60*60) {

#if (t > 10000 *300) {
#if (t > 60) {
#if (t > 1) { 
#if (t > 10) {
#if (t > 15) {
 media.video.recorder.stop(recording, tex);
 recording:=0;
 lt:=0.2;
};
#watch(t);


_ @sys.node;

n0 r6;

if (r0) {
# BIRD 7340;
# r6:=node.new.this.ex(r0, BIRD, 1);
# AWESOME.NOTES 10010000;
# r6:=node.new.this.ex(r0, AWESOME.NOTES, 0);
# ACPU.STUDIO 10019000;
# r6:=node.new.this.ex(r0, ACPU.STUDIO, 0);
# LIVECOMMENT 10018000;
# r6:=node.new.this.ex(r0, LIVECOMMENT, 0);
# TEST.TEXT 5300;
# r6:=node.new.this.ex(r0, TEST.TEXT, 0);

 _ @1010; _ @sys.llog; llog.b(Q.test.media.texture); llog.erase(u0, 0); llog.pv(Q.r6, r6); llog.e();
};

anotes.position {
# node.prop.s.s(u0, n0, 0.2);
# node.prop.x.s(u0, n0, 200-cos(t)*50);
# node.prop.y.s(u0, n0, 200+sin(t)*50);
 node.prop.x.s(u0, n0, -50);
 node.prop.y.s(u0, n0, -100);
 node.prop.s.s(u0, n0, 0.95);
};
#anotes.position;
livecomment.position {
# node.prop.x.s(u0, n0, -50);
# node.prop.y.s(u0, n0, -100);
 node.prop.s.s(u0, n0, 0.25);
};
#livecomment.position;

rr0 recording * rnd(u0)<0.5;
TMT.PARTICLE 5402;
#node.new.this.ex4(rr0, TMT.PARTICLE, 50,150,0,0);

#y:=-200;
t+=dt;

k:=1;

   _ @4;
   ui.value1(l12,110,150,0.5,tw);
   ui.value1(l13,110,110,0.5,th);


### 5401 test.media.texture.draw

color(u0, 1,1,0,1);
form {
 x0 0+50*_0;
 y0 0+50*_0;
 x1 50+50*_0;
 y1 50+50*_0+rnd(u0)*50;
 x2 100+50*_0;
 y2 0+50*_0;
 n 0;m 0;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 1;m 1;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 2;m 0;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 3;m 0;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 4;m 1;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 5;m 0;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
 n 2.5;m 1.7;triangle(u0, 6, x0(n),y0(m), x1(n),y1(m), x2(n),y2(m));
};
#form;

# DRAW TRI [

_ @1010;
_ @sys.node;
_ @sys.obj;
_ @1100;
_ @util.gl.std;
_ @sys.display;

w 200;
h 200;

 gl.shader.use(70014,75083);
 gl.rect0(5, 0,0, w,h);

# DRAW TRI ]

#_ @1010;
#_ @sys.node;
_ @sys.media;

tex r8;
texflip r9;
recording r5;

tex0boot0 u13;
tex0boot1 u14;

tex0src tex0boot0;

texflip tex0src;

rec.scale r10;

#watch(tex);
#watch(texflip);

draw.boot {
 dma0 0;
 sharedobj.key(u0, dma0,1000);
 l0:=dma.get(u0, dma0,0);
 
# node.ex.gl.node.set.draw.transform(u0, 0,0, 0, 0.5);
 node.ex.gl.node.draw(u0, l0);
};


record.frame {
  to.texture0 {
   node.ex.gl.fbo(u0, texflip);

   node.ex.gl.clear(u0, 0,0,0,0);
# node.ex.gl.clear(u0, 1,1,0,1);
# node.ex.gl.clear(u0, rnd(u0),rnd(u0),rnd(u0),1);  

#  form;
   draw.boot;
 
#  node.ex.gl.child.draw(u0);

   node.ex.gl.fbo(u0, -1);
  };

 l0:=node.ex.is.this.drawing(u0);
 if (l0 == 0) {

#  to.texture0;

  node.ex.gl.fbo(u0, tex);

  node.ex.gl.clear(u0, 0,1,0,0);

  shader node.ex.shader;
  vsh 5404; fsh 5405;
  shader.use(u0, vsh,fsh);
  shader.uniform.texture(u0, 0, texflip, 0);

#  w 768*2; h 1024*2;
  w node.texture.width(tex0src)/2*rec.scale;
  h node.texture.height(tex0src)/2*rec.scale;

  node.ex.gl.point4tex4(u0, 5, 0,0,w,0,0,h,w,h, 0,1, 1,1, 0,0, 1,0);

  node.ex.gl.fbo(u0, -1);

  media.video.recorder.frame.ready(u0, tex, dt);
#  media.video.recorder.frame.ready(u0, texflip, dt);
 };
};

#record.frame1 {
# media.video.recorder.frame.ready(u0, tex0boot1, dt);
# media.video.recorder.frame.ready(u0, tex0boot0, dt);
#};

rr0 recording * (mod(t, 1)<0.5);
color(rr0, 0.9,0,0.2,0.9);
circle(rr0, 6, 50,150, 10, 6,10, 0);
circle(rr0, 3, 50,150, 15, 6,10, 0);

_ @sys.sharedobj;
_ @sys.obj;

if (recording) {
 record.frame;
};

### 5402 tmt.particle(x,y)

r0:=k==0;

draw(r0, 5403);

dx r1;
dy r2;
c r3;

if(r0){
 x:=p0;
 y:=p1;
 dx:=rnd(u0)-0.5;
 dy:=rnd(u0)-0.5;
 c:=rnd(u0);
 lt:=10;
};

y+=1+dy;
x+=dx;
s:=0.05;
t+=dt;
k:=1;

### 5403 tmt.particle.draw

c r3;
cgm 1; cgo 1; cgs 0.1;
r 0.5+0.5*sin(t); #(c+t)*cgm*pi+cgo)*cgs;
g 0; b 0.5+0.5*sin(t*100000);
color(u0, r,g,b,0);
rect(u0, 6, 0,0, 100,100);
circle(rr0, 3, 50,150, 150, 6,10, 0);

### 5404:S test.media.texture.vsh

attribute vec4 a_position;
attribute vec2 a_texCoord;
varying mediump vec2 v_texCoord;
void main()
{
  gl_Position = CC_MVPMatrix * a_position;
  v_texCoord = a_texCoord;
}

### 5405:S test.media.texture.fsh

varying vec2 v_texCoord;
uniform sampler2D p0;
void main()
{
  gl_FragColor = texture2D(p0, v_texCoord);
//  gl_FragColor.rgb = gl_FragColor.gbr;
}
