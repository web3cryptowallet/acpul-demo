### 1038 sys.llog

# livelogging [

livelog {
 a 502000;

 host {
  # u0, ip0-3,port
  io(_0, 501055, _5, 0,0,0);
  io(_0, a+7, _1,_2,_3,_4);
 };

 enable
  # u0, en
  io(_0, a+8, _1, 0,0,0);

 begin
  # u0, str
  io(_0, a+0, _1,0,0,0);
 end
  # u0
  io(_0, a+1, 0,0,0,0);

 print
  # u0, fmt
  io(_0, a+2, 0, _1, 0,0);
 printv
  # u0, fmt, v
  io(_0, a+2, 0, _1, 1, _2);
 printv2 {
  # u0, fmt, v0,v1
  io(_0, a+3, _3,0,0,0);
  io(_0, a+2, 0, _1, 2, _2);
 };
 printv3 {
  # u0, fmt, v0,v1,v2
  io(_0, a+3, _3,_4,0,0);
  io(_0, a+2, 0, _1, 3, _2);
 };
 printv4 {
  # u0, fmt, v0,v1,v2,v4
  io(_0, a+3, _3,_4,_5, 0);
  io(_0, a+2, 0, _1, 4, _2);
 };
 printo {
  # u0, fmt, mode, object||dma, i
  io(_0, a+3, _4,0,0,0);
  io(_0, a+4, 0, _1, _2, _3);
 };

 step
  # u0
  io(_0, a+5, _1,0,0,0);

 erase
  # u0, str
  io(_0, a+6, _1,0,0,0);

 b begin(u0, __);
 e end(u0, __);
 p print(u0, __);
 pv printv(u0, __);
 pv2 printv2(u0, __);
 pv3 printv3(u0, __);
 pv4 printv4(u0, __);
 po printo(u0, __);
};

llog livelog;

#llog.print(fmt);
#llog.printv(fmt, v);
#llog.printv2(fmt, v0, v1);
#llog.printo(fmt, o||dma);
#llog.pv2(value.is.one, v2);

# livelogging ]

### sys.llog2

livelog2 {
 a 0;

 new
  # u0 -> lid 
  io(_0, a+0, _1, 0,0,0);

 put
  # u0, lid, path, msg, replace
  # path - obj:str|buf|dma
  # path -1 - selected path
  io(_0, a+1, _1, 0,0,0);

 log
  # u0, lid, path, msg
  put(_0, _1, _2, 0);
 replace
  # u0, lid, path, msg
  put(_0, _1, _2, 1);

 get
  # u0, lid, path -> msg
  io(_0, a+3, _1, 0,0,0);

 erase
  # u0, lid, path
  io(_0, a+4, _1, 0,0,0);

 path {
  select
   # u0, lid, mode, path, v0
   # mode: flags 8 2 1
   #  1: flag mode
   #   0 - start or path
   #   1 - relative
   #  2: flag child
   #   0 - select node
   #   1 - select child with index (v0)
   #  8: flag splitter
   #   0  - "/" spitter
   #   8 - "." dot splitter
   # path:
   #  "/abc" - start "abc"
   #  "abc" - relative "$P/abc"
   #  "/a/b" - start "a/b"
   #  "a.b" - relative "a.b"
   io(_0, a+5, _1, _1, _2, _3);

  push
   # u0, lid, str
   io(_0, a+6, _1, _2, 0,0);
  pop
   # u0, lid
   io(_0, a+7, _1, 0,0,0);

  get
    # u0, lid, buf -> path.buf
   io(_0, a+8, _1, 0,0,0);

  get.children
   # u0, lid, buf -> list.buf
   io(_0, a+3, _1, 0,0,0);
 };

 begin path.push(__);
 end path.pop(__);

};
