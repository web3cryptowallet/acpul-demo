### @sys.obj.tree;

# tree [

tree.new
 # u0, itemmax, itemoverhead
 obj_new(_0, 2, _1, _2, 0,0);

it.tree.begin # == it.begin
 # u0, id,i
 obj_it_select2(_0, 0, _1,_2, 0,0);
it.tree.end   # == it.end
 # u0, id,i
 obj_it_select2(_0, 1, _1,_2, 0,0);

it.tree.depth.begin
 # u0, id,i, j,depth
 obj_it_select2(_0, 2, _1,_2, _3,_4);
it.tree.depth.end
 # u0, id,i, j,depth
 obj_it_select2(_0, 3, _1,_2, _3,_4);

it.tree.breadth.begin
 # u0, id,i
 obj_it_select2(_0, 4, _1,_2, 0,0);
it.tree.breadth.end
 # u0, id,i
 obj_it_select2(_0, 5, _1,_2, 0,0);

it.tree.sibling.child.begin
 # u0, id,i, j
 obj_it_select2(_0, 6, _1,_2, _3,1);
it.tree.sibling.begin
 # u0, id,i, j
 obj_it_select2(_0, 6, _1,_2, _3,0);
it.tree.sibling.end
 # u0, id,i, j
 obj_it_select2(_0, 7, _1,_2, _3,0);

it.tree.leaf.begin
 # u0, id,i, j
 obj_it_select2(_0, 8, _1,_2, _3,0);
it.tree.leaf.end
 # u0, id,i, j
 obj_it_select2(_0, 9, _1,_2, _3,0);

it.tree.post.begin
 # u0, id,i
 obj_it_select2(_0, 10, _1,_2, 0,0);
it.tree.post.end
 # u0, id,i
 obj_it_select2(_0, 11, _1,_2, 0,0);

it.tree.parent
 # u0, id,i
 obj_it_select2(_0, 12, _1,_2, 0, 0);

it.tree.erase
 # u0, id,i
 obj_it_cmd(_0, 0, _1,_2, 0,0,0,0);
it.tree.erase_children
 # u0, id,i
 obj_it_cmd(_0, 1, _1,_2, 0,0,0,0);

it.tree.append_child
 # u0, id,i
 obj_it_cmd(_0, 2, _1,_2, 0,0,0,0);
it.tree.prepend_child
 # u0, id,i
 obj_it_cmd(_0, 3, _1,_2, 0,0,0,0);
it.tree.insert
 # u0, id,i
 obj_it_cmd(_0, 4, _1,_2, 0,0,0,0);

it.tree.insert.root {
 it.begin(_0, _1,_2);
 it.tree.insert(_0, _1,_2); # top
};

it.tree.depth
 # u0, id,i
 obj_it_cmd(_0, 20, _1,_2, 0,0,0,0);
it.tree.depth.diff
 # u0, id,i, j
 obj_it_cmd(_0, 21, _1,_2, _3,0,0,0);
it.tree.max_depth
 # u0, id,i
 obj_it_cmd(_0, 22, _1,_2, 0,0,0,0);

it.tree.number_of_children
 # u0, id,i
 obj_it_cmd(_0, 23, _1,_2, 0,0,0,0);
it.tree.number_of_siblings
 # u0, id,i
 obj_it_cmd(_0, 24, _1,_2, 0,0,0,0);

#it.tree.previous_sibling
#it.tree.next_sibling
#it.tree.next_at_same_depth

# tree ]
