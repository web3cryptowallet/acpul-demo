### 1035 sys.media

media.init
 # u0
 io(_0, 500800, 0,0, 0,0);

media.step
 # u0, dt
 io(_0, 500904, _1,0,0, 0);

# FONT [

#media.nvg.load.font
# # u0, pool,id,i
# io(_0, 500810, 0,0, 0,0);

# dmaOut
# [0] <drawItem>
# [1] type,count
#     mixX,minY,minZ,maxX,maxY,maxZ
#     <infoChars>
# type: 0
# [0] drawItem {
#. 0:texCoord0(x,y),vertex0(x,y)
#. 4:texCoord1(x,y),vertex1(x,y)
#. 8:texCoord2(x,y),vertex2(x,y)
#. 12:texCoord3(x,y),vertex3(x,y)
#  16: _size_
# }
# [1] infoChar {
#  0: charCode
#  1: texture
#  2: position, length
#  4: rect(minXY,maxXY)
# }

media.ft.mode {
 texture 0;
 outline 1; 
 polygon 2;
};

media.ft.load.font
 # u0, mode, pool,id,i -> font
 io(_0, 500900, _1, _2,_3,_4);

media.ft.text.dma {
 # u0, font,size objString, dmaOut(p0,p1,p2)
 io(_0, 500901, _1,_2, _3, 0);
 io(_0, 500902, _4,_5,_6, 0);
};

media.ft.draw 
 # u0, dma(p0,p1,p2)
 io(_0, 500903, _1,_2,_3, 0);

# FONT ]
# VIDEO RECORD [

media.video.recorder.texture {
 # u0, videofile(pool,id), mode, width,height -> tex
 io(_0, 500830, _1, _2, 0,0);
 io(_0, 500831, _3, _4,_5, 0);
};

media.video.recorder.frame.ready
 # u0, tex, dt
 io(_0, 500832, _1, _2, 0,0);

media.video.recorder.stop
 # u0, tex
 io(_0, 500833, _1, 0,0,0);

media.video.recorder.set.duration
 # u0, tex, duration
 io(_0, 500834, _1, _2, 0,0);

# VIDEO RECORD ]
# TWITCH [

media.twitch.attach.texture
 # u0, tex
 io(_0, 500850, _1, 0,0,0);

media.twitch.set.url
 # u0, url:string
 io(_0, 500851, _1, 0,0,0);

media.twitch.start
 # u0
 io(_0, 500852, 0,0,0,0);

media.twitch.stop
 # u0
 io(_0, 500853, 0,0,0,0);

media.twitch.set.param
 # u0, param, value
 io(_0, 500854, _1, _2, 0,0);

# TWITCH ]
# INPUT [

media.input.pool 950;

media.input.e {
 key.pressed 1;
 key.down 2;
 key.up 3;
 key.flags.changed 4;
};

media.input.display.keyboard
 # u0, on
 io(_0, 500950, _1, 0,0,0);

media.input.get.keys.flags
 # u0, index
 io(_0, 500951, _1, 0,0,0);

media.input.get.display.keyboard.rect
 # u0
 io(_0, 500952, _1, 0,0,0);

# INPUT ]
# AUDIO [

media.audio.setup
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.start
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.stop
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.create.sample
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.load.sample.buf
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.play.sample
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.sample.set.adsr
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.sample.set.length
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.sample.write
 # u0
 io(_0, 500960, 0, 0,0,0);

media.audio.sample.read
 # u0
 io(_0, 500960, 0, 0,0,0);

# AUDIO ]
# VIDEO [

media.video.select
 # u0, pool,id,i
 io(_0, 500970, _1,_2,_3, 0);

media.video.options
 # u0, offset, loop
 io(_0, 500971, _1,_2, 0,0);

media.video.play
 # u0, vid
 io(_0, 500972, 0,0,0,0);

media.video.stop
 # u0, vid
 io(_0, 500973, 0,0,0,0);

media.video.render.texture
 # u0, vid, tex 
 io(_0, 500974, _1,_2, 0,0);

# NEW

media.video.get.time
 # u0, vid, mode
 # mode=0 -> time seconds
 # mode=1 -> time pts
 io(_0, 500975, 0, _1, _2, 0);

media.video.set.time
 # u0, vid, mode, time
 # mode=0 time seconds
 # mode=1 time pts
 io(_0, 500975, 1, _1, _2, _3);

media.video.get.duration
 # u0, vid, mode
 # mode=0 -> duration seconds
 # mode=1 -> duration pts
 io(_0, 500975, 6, _1, _2, 0);

media.video.get.size
 # u0, vid -> o0,o1 - size
 io(_0, 500975, 2, _1, 0,0);

media.video.set.speed
 # u0, vid, speed
 io(_0, 500975, 3, _1, _2, 0);

media.video.set.time.next.frame
 # u0, vid, mode, time
 # mode=0 time seconds
 # mode=1 time pts
 io(_0, 500975, 4, _1, _2, _3);

media.video.is.finished
 # u0, vid -> finished
 io(_0, 500975, 5, _1, 0,0);

# VIDEO ]
