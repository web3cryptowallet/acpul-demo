### dota.alien.headcrab

_ @easy.start.new1;

crab0 0;

if ((crab0==0)*w*h>0) {
 headcrab.new;
};

t+=dt;

# ALIEN HEADCRAB [

headcrab.new {
 x2 0;
 y2 0;
 w2 w;
 h2 h;
 new.ui.shader.node3(crab0, x2,y2,1/3, w2,h2, 70014,29133); # dota.headcrab
 shader.set.uniform.v(crab0, A.time, rnd(u0)*100); #
};

headcrab.step {
 shader.set.uniform.v(crab0, A.time, t); #
};

headcrab.step;

# ALIEN HEADCRAB ]


### dota.alien.headcrab.test
# min:w:h, sz

_ @easy.start.new1;

crab0 0;

if ((crab0==0)*w*h>0) {
 headcrab.test;
};

t+=dt;

headcrab.test {
 i=0;while(i<10) {
  hq 2;
  x2 0+rnd(u0)*(w-w2);
  y2 0+rnd(u0)*(h-h2);
  sz=rnd(u0)+0.1;
  w2 50+sz*100*hq;
  h2 50+sz*100*hq;
#  w2 50+sz*700;
#  h2 50+sz*700;
#  x2 280;
#  sz:=1;
#  y2 30+i*25;
#x2 0; 
#  y2 0;
  new.ui.shader.node3(sn0, x2,y2,1/3/hq, w2,h2, 70014,29133); # dota.headcrab
  shader.set.uniform.v(sn0, A.time, rnd(u0)*100); #
  node.value.s(u0, sn0,1, 1); # draw.off
#  node.prop.z.order.s(u0, sn0, 100000-y2);
  node.prop.z.order.s(u0, sn0, 1000-y2);
#  texx=node.value.g(u0, sn0,0);
# gl.texture.filter.nearest(texx);
#  gl.texture.filter.linear(texx);
  i+=1;
 };
};

