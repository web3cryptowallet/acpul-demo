### dota.building.crunch1
# tex1

tex1 p0;

_ @dota.node.base0;
_ @photoneo.common.gl.extra;

draw.fid(dota.building.crunch1.draw);

sn0 0;
crunch0 0;

new.crunch1 {
 x0 0;
 y0 0;
# x0 200;
# y0 130;
# new.ui.shader.node3(sn0,  x0,y0+10,1/2, 100,100, 70014,28983); # dota.effect.star83
 hq 3;
# hq 0.1;

# new.ui.shader.node3(sn0, x0,y0,1/2, 100,100, 70014,28964); # dota.building.crunch
# new.ui.shader.node3(sn0, x0,y0,1/4, 200,200, 70014,28964); # dota.building.crunch
 new.ui.shader.node3(sn0, x0,y0,1/hq, 100*hq,100*hq, 70014,28964); # dota.building.crunch
 shader.set.uniform.v(sn0, A.time, 10); # 
# shader.set.texture(sn0, A.iChannel0, tex3); # 
 shader.set.texture(sn0, A.iChannel0, tex1); # 
 crunch0:=sn0;

# hq 2;
# hq 0.5;
 hq 0.5/2;
# new.ui.shader.node3(sn0,  x0,y0+10,1/2, 100,100, 70014,28983); # dota.effect.star83
 new.ui.shader.node3(sn0,  x0,y0+25/2,1/hq, 100*hq,100*hq, 70014,28983); # dota.effect.star83
# texx=node.value.g(u0, sn0,0);
# gl.texture.filter.linear(texx);
};

if (r0) {
 new.crunch1;
};

# Optimize: draw once 
frame0 0;
frame0+=1;
if (frame0==4) { # magic number 4
 node.value.s(u0, crunch0,1, 1); # draw.off
# node.value.s(u0, sn0,1, 1); # draw.off
};


x00 r2;
y00 r3;

x00:=node.x(sn0);
y00:=node.y(sn0);



### dota.building.crunch1.draw

x00 r2;
y00 r3;

color(u0, 0.5,0.5,0.5,0.5);
#rect(u0, 6, x00,y00, w,h);
rect(u0, 2, x00,y00, 10,10);
