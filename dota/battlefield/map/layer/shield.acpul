### dota.base.shield1

_ @dota.node.base0;

sn0 0;

if ((sn0==0)*w*h>0) {
 shield1;
};

t+=dt;


shield1 {
 x0 0;
 y0 0;
# new.ui.shader.node3(sn0, 0,0,0.1, 2000,2000, 70014,28828); # dota.skill.shield2.hex
 new.ui.shader.node3(sn0, 0,0,0.1, 300,300, 70014,28828); # dota.skill.shield2.hex
 shader.set.uniform.v4(sn0, A.col0, 0,0.7,0.7,0.5);
# shader.set.uniform.v4(sn0, A.col0, 0,0.2,0.7,0.3);
# shader.set.uniform.v4(sn0, A.col0, 0,0.2,0.7,0.5);
# shader.set.uniform.v4(sn0, A.col0, 0.5,0.5,0,0.5);
 shader.set.uniform.v3(sn0, ORANGE, 0.7, 0.3, 0.1);
 shader.set.uniform.v3(sn0, BROWN, 0.5, 0.5, 0.2);
 shader.set.uniform.v3(sn0, PURPLE, 0.6, 0.2, 0.5);
 shader.set.uniform.v3(sn0, RED, 0.7, 0.1, 0.2);
# shader.set.uniform.v(sn0, A.tiles0, 60);
 shader.set.uniform.v(sn0, A.tiles0, 20);
 shader.set.uniform.v(sn0, A.layers, 9);
# shader.set.uniform.v(sn0, A.layers, 5);
 shader.set.uniform.v(sn0, A.mode, 1);


 tex0=node.value.g(u0, sn0,0);

 ss 3;
 w0 w;
 h0 h;
 x0 300;
 y0 300;
# w0 1400;
# h0=w0;
# x0=150-w0/2/ss;
# y0=150-h0/2/ss;
 new.ui.shader.node3(sn0, x0,y0,1/ss, w0,h0, 70014,29122); # dota.ball.tex
 shader.set.uniform.v(sn0, A.mode, 1);
 shader.set.uniform.v(sn0, A.dismfScale0, 0.0);
 shader.set.uniform.v2(sn0, A.scaleTex, 1*3,1*3);
 
 shader.set.texture(sn0, A.iChannel0, tex0);
 tex=node.value.g(u0, sn0,0);
 gl.texture.filter.nearest(tex);
};
