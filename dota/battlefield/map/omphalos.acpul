### dota.omphalos

### dota.trees.spruce


### dota.forest.entity

_ @easy.start.new;
_ @4;
_ @os.util0;
_ @os.util2;
_ @basic.ui.shader.node3.inc;

sn0 0;

r0wh 0+(w>0)*(h>0)*(_0==0);

if (r0wh(sn0)) {
 new.ui.shader.node3(sn0, 0,0,1, w,h, 70014,28830); # dota.omphalos

 #dbg
 new.ui.shader.node3(sn0, 0,0,1, w/4,h, 70014,28830); # dota.omphalos

# node.prop.z.order.s(u0, nid, rnd(u0)*100);
};

dbg {
#z=node.prop.z.order.g(u0, sn0);
z=node.prop.z.order.g(u0, nid);

_ @4;
#lbl0 0; val0 0; ui.value4(lbl0,val0,20,0,0.5, X, x);
lbl0 0; val0 0; ui.value4(lbl0,val0,20,0,0.5, Y, y);
lbl0 0; val0 0; ui.value4(lbl0,val0,20,10,0.5, Z, z);
#lbl0 0; val0 0; ui.value4(lbl0,val0,20,20,0.5, NID, nid);


draw.fid(dota.forest.entity.draw);
};
#dbg;


### dota.forest.entity.draw

color(u0, 0,0.1,0,0.5);
#rect(u0, 2, 0,0,w,h);
rect(u0, 6, 0,0,w,h);



### 3284 dota.forest.of.omphalos


_ @4;
_ @os.util0;
_ @os.util2;
_ @basic.ui.shader.node3.inc;
_ @sys.shader.ex;

type 0;
count 10;

sn0 0;
if (r0) {
# new.ui.shader.node3(sn0, 0,0,1, 100,100, 70014,28830); # dota.omphalos
# create0;
};

create0 {
 new.ui.shader.node3(sn0, 0,0,1, w,h, 70014,28830); # dota.omphalos
};

create1 {
 # w,h, ow,oh, count, s0a,s0b
 w _0; h _1;
 ow _2; oh _3;
 cnt _4;
 s0a _5; s0b _6;

 i=0;while(i<cnt) {
#  s0=1+2*rnd(u0)+1;
#  s0=1*2+2*rnd(u0);
#  s0=1*2+2*rnd(u0);
  s0=s0a+s0b*rnd(u0);
  w0=ow;
  h0=oh;
  w1=ow*s0;
  h1=oh*s0;
  y0=rnd(u0)*(h-h1); 
  x0=rnd(u0)*(w-w1);

#  new.node.common0(sn0, x0,y0,s0, w0,h0, NNN(dota.forest.entity), 0);

#  x0 i*3;
#  y0 i*10;
#j=i*rnd(u0);
#x0 50+j*10;
#y0 j*50;
qq=rnd(u0);
m=0;
m:=if(qq<0.1,m,1);
m:=if(qq<0.2,m,2);
m:=if(qq<0.3,m,3);
m:=if(qq<0.4,m,4);
m:=if(qq<0.5,m,5);
#m 5;
#qq 1;
if (m==0) {
#if (qq<0.5) {
  new.ui.shader.node3(sn0, x0,y0,s0, w0,h0, 70014,28830); # dota.omphalos
};
if (m==1) {
#if (qq>0.5) {
  new.ui.shader.node3(sn0, x0,y0,s0/2, w0,h0, 70014,28967); # dota.tree67
#  new.ui.shader.node3(sn0, x0,y0,s0, w0,h0, 70014,28795); # rock95
};
if (m==2) {
  new.ui.shader.node3(sn0, x0,y0,s0, w0,h0, 70014,28795); # rock95
  shader.set.uniform.v(sn0, A.time1, rnd(u0)*100);
};
if (m==3) {
  new.ui.shader.node3(sn0, x0,y0,s0/2, w0,h0, 70014,28794); # magic.mushroom
  shader.set.uniform.v(sn0, A.time1, rnd(u0)*100);
  shader.set.uniform.v3(sn0, A.color, rnd(u0),rnd(u0),rnd(u0));
};
if (m==4) {
  new.ui.shader.node3(sn0, x0,y0,s0, w0,h0, 70014,28980); # dota.bud80
  shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
};
if (m==5) {
aa {
  s0=s0a+s0b*rnd(u0);
  s0*=2;
  w0=ow;
  h0=oh;
  w1=ow*s0;
  h1=oh*s0;
  y0=rnd(u0)*(h-h1); 
  x0=rnd(u0)*(w-w1);
};
  new.ui.shader.node3(sn0, x0,y0,s0, w0,h0, 70014,28982); # dota.tree82
  shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
};

#  node.prop.z.order.s(u0, sn0, 1000-y0);
  node.prop.z.order.s(u0, sn0, 100000-y0);
#  node.prop.z.order.s(u0, sn0, y0);
#  node.prop.z.order.s(u0, sn0, y0);
#  node.prop.z.order.s(u0, sn0, 111);
  i+=1;
 };
};

#req.update:=if(req.update>0,req.update-0.1,0);
#req.update:=0;
req.update:=if(req.update>0,req.update-0.5,0);
#req.update:=1;

inited 0;
if ((inited==0)*w*h) {
 inited:=1;
# create0;
# create1(w,h, 50,50, 50, 2,2); 
 create1(w,h, 100,100, 70, 1,0.5); 
# create1(w,h, 200,200, 50, 1,-0.5); 
# create1(w,h, 30,50, 150, 1,1); 

 create.texture;

 node.ex.child.draw.s(u0, 0);

 req.update:=1;
};

tex0 r1;

req.update r2;

create.texture {
# tex0:=node.ex.texture.create(u0, w*2,h*2);
 tex0:=node.ex.texture.create(u0, w,h);
#  node.value.s(u0, nid,0, tex0);
};

draw(r0, 3285);

### 3285 dota.forest.of.omphalos.draw

color(u0, 0.1,0.1,0,0.1);
#color(u0, 1,0.5,0,0.5);
rect(u0, 2, 0,0,w,h);

_ @4;
_ @900776;
_ @1100;
_ @util.gl.std;

_ @sys.obj.key;
_ @sys.shader.ex;

#vsh0 r2;
#fsh0 r3;

req.update r2;

tex0 r1;

if (req.update>0) {
 draw.to.fbo;
};

draw.to.fbo {
 node.ex.gl.fbo(u0, tex0);
# node.ex.gl.clear(u0, 0,0,rnd(u0),0);
# node.ex.gl.clear(u0, 0,0,req.update,0);
 node.ex.gl.clear(u0, 0,0,0,0);

#gl.shader.use(vsh0,fsh0);

#shader.load.uniforms(u0, nid);

#gl.rect0(5, 0,0, w,h);

 node.ex.gl.child.draw(u0);

 node.ex.gl.fbo(u0, -1);
};

gl.rect0.texture(5, 0,0, w,h, tex0);
