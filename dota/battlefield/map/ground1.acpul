### dota.map.ground1

#_ @winamp.util;


_ @1111;
_ @sys.storage;
_ @os.util0;
_ @os.util2;
_ @basic.ui.shader.node3.inc;
_ @sys.shader.ex;

_ @load.texture;

new.ground {
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28972); # dota.layer.ground2
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28972); # dota.layer.ground2
 new.ui.shader.node3(sn0,  0,0,1/3, 1000,1000, 70014,28972); # dota.layer.ground2
 texx=node.value.g(u0, sn0,0);
# gl.texture.filter.nearest(texx);
 gl.texture.filter.linear(texx);

# new.ui.shader.node3(sn0,  0,0,1/3, 1000,1000, 70014,28973); # x dota.layer.ground3
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28973); # x dota.layer.ground3

 shader.set.texture(sn0, A.iChannel0, tex99); # mask
 shader.set.texture(sn0, A.iChannel1, tex0);
 shader.set.texture(sn0, A.iChannel2, tex1);
 shader.set.texture(sn0, A.iChannel3, tex2);
 #shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
 #shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
};


# PLACES [

# Default
ww 100;
hh 100;

new.place.crunch1
 new.node.common0(_0, _1,_2,_3, _4,_5, NNN(dota.building.crunch1), _6);

new.place.crunch2
 new.node.common0(_0, _1,_2,_3, _4,_5, NNN(dota.building.crunch2), _6);

new.place.crystals1
 new.node.common4(sn0, 0,0,1, ww,hh, NNN(dota.layer.crystals1), tex1,0,0,0);

new.place.crystals2
 new.node.common4(sn0, 0,0,1, ww,hh, NNN(dota.layer.crystals2), tex3,tex99,0,0);

# PLACES SPACE [

new.place.space.launch.base
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.space.launch.base), 0,0,0,0);

new.place.space.container
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.space.building.container), 0,0,0,0);

new.unit.alien1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.unit.alien1), 0,0,0,0);

# PLACES SPACE ]

new.hypnotoad
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.hypnotoad), 0,0,0,0);

new.fantasy.skull0
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.fantasy.skull0), 0,0,0,0);

new.eff.circle0
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.eff.circle0), 0,0,0,0);

new.headcrab
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.headcrab), 0,0,0,0);
new.headcrab.test
 # sn0, x:y:s:w:h, min:w:h, sz
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.headcrab.test), _6,_7,_8, 0);

new.alien.jelly0
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.jelly0), 0,0,0,0);

new.buff.a0
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.buff.a0), 0,0,0,0);

new.crystal1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.crystal1), 0,0,0,0);

new.bullet.fireball1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.bullet.fireball1), 0,0,0,0);

new.fire1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.fire1), 0,0,0,0);

 

new.alien.egg0
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.egg0), _6,_7, 0,0);
new.alien.eggs1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.eggs1), _6,_7, 0,0);
new.alien.egg04
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.alien.egg04), 0,0,0,0);

new.destroyer1
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.space.destroyer), _6, 0,0,0);

# new.ui.shader.node3(sn0,  120/3,400/3,1/3, 200/2,200/2, 70014,28985); # dota.portal85

new.portal85
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(A.dota.portal85), 0,0,0,0);

new.frac86
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.frac86), 0,0,0,0);

new.ghost89
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.ghost89), 0,0,0,0);

new.magic0
 # .., tex
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.buff.magic0), _6, 0,0,0);

new.magic1
 # .., color
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(dota.buff.magic1), _6,_7,_8,_9);

_ @dota.map.primitives;


# PLACES ]

tex0 0;
tex1 0;
tex2 0;
tex3 0;

tex4 0;

tex99 0; # mask grass1

sn0 0;

#_ @dota.ground1.alien;
# ## ytytuu


if (r0) {

 # TEXTURES [

# load.texture(tex0, 11001,1,1);
# load.texture(tex0, 11001,1,2);
# load.texture(tex0, 11001,1,3);

a {
 load.texture(tex99, 11001,1,2); # mask grass1
 load.texture(tex0, 11001,1,4); # ground.grass1
 load.texture(tex1, 11001,2,5); # ground.gold
 load.texture(tex2, 11001,6,3); # ground.rocks
};

# load.texture(tex99, 11001,1,1); # mask grass1
 load.texture(tex99, 11001,1,2); # mask grass1
# load.texture(tex99, 11001,1,3); # mask grass1

 load.texture(tex0, 11001,1,4); # ground.grass1
 load.texture(tex1, 11001,2,5); # ground.gold
# load.texture(tex2, 11001,3,1); # ground.marble

# load.texture(tex2, 11001,4,6); # ground.sand
# load.texture(tex0, 11001,4,6); # ground.sand

# load.texture(tex0, 11001,5,4); # ground.forest
# load.texture(tex2, 11001,5,4); # ground.forest
 load.texture(tex4, 11001,6,3); # ground.rocks
# load.texture(tex2, 11001,7,2); # ground.grass7

 load.texture(tex2, 11001,8,5); # ground.road
# load.texture(tex2, 11001,8,5); # ground.paving.stones

# load.texture(tex2, 11001,9,4); # ground.bricks9
# load.texture(tex2, 11001,10,5); # ground.rocks10 1024x512
# load.texture(tex2, 11001,11,6); # ground.rocks11 1024x512

# load.texture(tex0, 11001,12,1); # ground.pattern1
# load.texture(tex0, 11001,12,2); # ground.pattern2
# load.texture(tex0, 11001,12,3); # ground.pattern3

 # TEXTURES ]
 # GROUND [
 # ALIEN TERRAIN [

 new.ui.shader.node3(sn0, 260,0,1/3, 300,300, 70014,29103); # dota.map.alien.terrain
 shader.set.uniform.v2(sn0, A.offs, 0.5,0.1);
 tex0:=node.value.g(u0, sn0,0);

 # ALIEN ]

 new.ground;

 # GROUND ]

 new.place.crystals1;

 new.place.crystals2;
 
#  new.ghost89(sn0, 0,0,1, 100,100);
 hq 0.5;
 new.ghost89(sn0, 60,135,1/3/2/hq, 200*hq,200*hq);

 new.place.crunch1(sn0, 0,0,1,100,100, tex1);
 new.place.crunch2(sn0, 110,140,1,100,100, tex1);

 new.ui.shader.node3(sn0,  0,0,1/3, 500,500, 70014,28984); # dota.effect.lighting

 new.portal85(sn0,  350,420/3,1/3, 200/2,200/2);

 new.frac86(sn0,  350,310/3,1/3, 200/2,200/2);

 new.hypnotoad(sn0,  100-30+20,100+50+20,1/3/1.5, 561/2,412/2);

 hq 1;
# hq 12;
 new.fire1(sn0, 200-3,140,1/3*hq, 25/2*3/hq,50/2*3/hq);
 new.fire1(sn0, 240,140,1/3*hq, 25/2*3/hq,50/2*3/hq);

 # BASE [


 new.place.space.launch.base(launch.base0, 110,0,1/3, 300,300);

# new.ui.shader.node3(sn0, 100,100,1/4, 1300/3,1300/3, 70014,28557); # starship7
# new.ui.shader.node3(sn0, 100,100,1/4, 1300/3,1300/3, 70014,28419); # starship1
 starship.new;

 new.place.space.container(sn0,  200,0,1/3, 200,200);


 # BASE ]




 # XCOIN TEST [

#};
#if(0){
# xcoin;

 xcoin.starship;

 # XCOIN TEST ]
 # DIALOG TEST [

 _ @dota.dialog.inc;
# new.dialog.hero(sn0, 0,0,1/5, 1024,768, 9); # 

 # DIALOG TEST ]


# new.ui.shader.node3(sn0, 100,0,1/3, 300/2,300/2, 70014,28994); # dota.droid.bb9

 new.destroyer1(sn0, 150,70,1/3, 300,300, tex4);


 # Good alien map
# new.ui.shader.node3(sn0, 260,0,1/3, 300,300, 70014,29103); # dota.map.alien.terrain
# shader.set.uniform.v2(sn0, A.offs, 0.5,0.1);

 new.alien.egg0(sn0, 0,0,1/3, 100,100, tex99,tex4);
 new.alien.eggs1(sn0, 0,0,1/3, 100,100, tex99,tex4);
 new.alien.egg04(sn0, 300,100,1/3, 100,100);

 hq 0.5;
 new.unit.alien1(sn0, 260,80,1/3/hq, 300/2*hq,300/2*hq);

 new.bullet.fireball1(sn0, 90,260,1/3, 100,100);

 new.crystal1(sn0, 90,30,1/3, 100,100);


 new.alien.jelly0(sn0, 70,260,1/3, 100,100);


 new.headcrab(sn0, 100,240,1/3, 100,100);
 new.headcrab.test(sn0, 280,30,1, 100,100, 50,50,2);

 new.magic1(sn0, 140,250,2/3, 100,100, 1/22,1/2,1/2,1);
 new.magic0(magic0, 140-20+3,250-20+3,1/3, 300,300, 0); # magic: 0-color, 1-b/w
 new.fantasy.skull0(sn0, 140+50/2-9,250+50/2-9,1/3*2, 50,50);
 new.eff.circle0(sn0, 140,250,2/3, 100,100);
# new.magic1(sn0, 140,250,2/3, 100,100, 1,1,0,1);

 new.buff.a0(sn0, 90,30,1, 100,100);

# new.magic0(magic0, 60,0,1/3, 300,300, 1); # magic: 0-color, 1-b/w

 new.magic1(sn0, 0,0,1/3, 100,100, 1,1,0,1);

# new.tesla.tower(sn0, 20,250,1/3, 200,200, 0);
 shield1;
};

shield1 {
 x0 0;
 y0 0;
 new.ui.shader.node3(sn0, 0,0,0.1, 100,100, 70014,28828); # dota.skill.shield2.hex
 shader.set.uniform.v4(sn0, A.col0, 0,0.2,0.5,0.7);
 tex0=node.value.g(u0, sn0,0);

 w0 130;
 h0=w0;
 new.ui.shader.node3(sn0, x0,y0,1, w0,h0, 70014,29122); # dota.
 shader.set.uniform.v(sn0, A.mode, 1);
 shader.set.uniform.v(sn0, A.dismfScale0, 0.2);
 shader.set.texture(sn0, A.iChannel0, tex0);
};


magic0 0;


# XCOIN [

_ @dota.xcoin;

 xcoin0 xcoin.starship;
# xcoin0 xcoin;

# tex0boot0 u13; tex0boot1 u14;
# tex0boot1:=xcoin0.tex11; tex0boot0:=xcoin0.tex11;


shader.set.uniform.v(xcoin0.sn0, A.time, t*2);
t+=dt;

# XCOIN ]
# SPACE [

_ @dota.space.spaceport;

# SPACE ]

add.coin {
 _ @dota.fly.box2;
 s0 3;
 box0=fly.box1(dock0.x-1*rnd(u0)/2+20,dock0.y+dock0.h/s0/2);
};

#add.coin;

# STARSHIP ]

_ @4;
lbl0 0; val0 0; ui.value4(lbl0,val0,20,5,0.3, A.starship.direction, starship.direction);
lbl0 0; val0 0; ui.value4(lbl0,val0,20,10,0.3, A.starship.t, starship.t0);
lbl0 0; val0 0; ui.value4(lbl0,val0,20,15,0.3, A.starship.height0, starship.height0);
lbl0 0; val0 0; ui.value4(lbl0,val0,20,20,0.3, A.starship.velocity0, starship.velocity0);

#  new.ui.shader.node3(starship0, x,y,1/2, 100/1,300/1, 70014,28992); # dota.starship92
#  shader.set.uniform.v(starship0, A.time, 0);



