### dota.map.ground1

#_ @winamp.util;


_ @1111;
_ @sys.storage;
_ @os.util0;
_ @os.util2;
_ @basic.ui.shader.node3.inc;
_ @sys.shader.ex;

# Import for use gl.texture.param
_ @photoneo.common.gl.extra;

load.texture {
 # tex, pool,id,i
 tex _0;
 tex:=storage.image.load.texture(_1,_2,_3);
# gl.texture.filter.nearest(tex);
};

new.ground {
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28972); # dota.layer.ground2
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28972); # dota.layer.ground2
 new.ui.shader.node3(sn0,  0,0,1/3, 1000,1000, 70014,28972); # dota.layer.ground2
 texx=node.value.g(u0, sn0,0);
# gl.texture.filter.nearest(texx);
 gl.texture.filter.linear(texx);

# new.ui.shader.node3(sn0,  0,0,1/3, 1000,1000, 70014,28973); # x dota.layer.ground3
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28973); # x dota.layer.ground3

 shader.set.texture(sn0, A.iChannel0, tex99); # mask
 shader.set.texture(sn0, A.iChannel1, tex0);
 shader.set.texture(sn0, A.iChannel2, tex1);
 shader.set.texture(sn0, A.iChannel3, tex2);
 #shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
 #shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
};

new.layer.crystal {
# new.ui.shader.node3(sn0,  0,0,1/3, 1000,1000, 70014,28974); # dota.layer.ground2
# new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28974); # dota.layer.crystal1
 new.ui.shader.node3(sn0,  200,100,1/3/2, 200,200, 70014,28974); # dota.layer.crystal1
 shader.set.texture(sn0, A.iChannel0, tex1); # 
};

tex0 0;
tex1 0;
tex2 0;
tex3 0;

tex99 0; # mask grass1

sn0 0;

if (r0) {
# load.texture(tex0, 11001,1,1);
# load.texture(tex0, 11001,1,2);
# load.texture(tex0, 11001,1,3);

a {
 load.texture(tex99, 11001,1,2); # mask grass1
 load.texture(tex0, 11001,1,4); # ground.grass1
 load.texture(tex1, 11001,2,5); # ground.gold
 load.texture(tex2, 11001,6,3); # ground.rocks
};

# load.texture(tex99, 11001,1,1); # mask grass1
 load.texture(tex99, 11001,1,2); # mask grass1
# load.texture(tex99, 11001,1,3); # mask grass1

 load.texture(tex0, 11001,1,4); # ground.grass1
 load.texture(tex1, 11001,2,5); # ground.gold
# load.texture(tex2, 11001,3,1); # ground.marble
# load.texture(tex2, 11001,4,6); # ground.sand

# load.texture(tex2, 11001,5,4); # ground.forest
# load.texture(tex2, 11001,6,3); # ground.rocks
# load.texture(tex2, 11001,7,2); # ground.grass7
 load.texture(tex2, 11001,8,5); # ground.road
# load.texture(tex2, 11001,8,5); # ground.paving.stones
# load.texture(tex2, 11001,9,4); # ground.bricks9
# load.texture(tex2, 11001,10,5); # ground.rocks10 1024x512
# load.texture(tex2, 11001,11,6); # ground.rocks11 1024x512

# load.texture(tex0, 11001,12,1); # ground.pattern1
# load.texture(tex0, 11001,12,2); # ground.pattern2
# load.texture(tex0, 11001,12,3); # ground.pattern3


 new.ground;
 new.layer.crystal;

new.crunch1 {
 x0 200;
 y0 130;
# new.ui.shader.node3(sn0,  x0,y0+10,1/2, 100,100, 70014,28983); # dota.effect.star83

 new.ui.shader.node3(sn0, x0,y0,1/2, 100,100, 70014,28964); # dota.building.crunch
 shader.set.uniform.v(sn0, A.time, 10); # 
# shader.set.texture(sn0, A.iChannel0, tex3); # 
 shader.set.texture(sn0, A.iChannel0, tex1); # 
 new.ui.shader.node3(sn0,  x0,y0+10,1/2, 100,100, 70014,28983); # dota.effect.star83
};
new.crunch2 {
# x0 200-8;
# y0 130-25;
# x0 200+20;
 x0 140;
 y0 140;
# new.ui.shader.node3(sn0,  x0,y0-10,1/(2-1), 100,100, 70014,28983); # dota.effect.star83
# new.ui.shader.node3(sn0,  x0,y0+10,1/2, 100,100, 70014,28983); # dota.effect.star83

# new.ui.shader.node3(sn0, x0,y0,1/2, 100,100, 70014,28964); # dota.building.crunch
# shader.set.uniform.v(sn0, A.time, 10); # 

 new.ui.shader.node3(sn0, x0,y0,1/2, 100,100, 70014,28952); # dota.building.crunch
 shader.set.uniform.v(sn0, A.time, 10); # 
# shader.set.texture(sn0, A.iChannel0, tex3); # 
 shader.set.texture(sn0, A.iChannel0, tex1); # 
 new.ui.shader.node3(sn0,  x0,y0+20,1/2, 100,100, 70014,28983); # dota.effect.star83
};
 new.crunch1;

};
