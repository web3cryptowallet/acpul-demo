### dota.map.ground1

#_ @winamp.util;


_ @1111;
_ @sys.storage;
_ @os.util0;
_ @os.util2;
_ @basic.ui.shader.node3.inc;

# Import for use gl.texture.param
_ @photoneo.common.gl.extra;

load.texture {
 # tex, pool,id,i
 tex _0;
 tex:=storage.image.load.texture(_1,_2,_3);
 gl.texture.filter.nearest(tex);
};

tex0 0;
sn0 0;

if (r0) {
 load.texture(tex0, 11001,1,1);

new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28983); # dota.layer.ground2
#new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28972); # dota.layer.ground2
#new.ui.shader.node3(sn0,  0,0,1, 200,200, 70014,28971); # dota.layer.ground1
#new.ui.shader.node3(sn0,  0,0,4, 200,200, 70014,28971); # dota.layer.ground1
#new.ui.shader.node3(sn0,  0,0,1, 1000,1000, 70014,28971); # dota.layer.ground1
shader.set.texture(sn0, A.iChannel0, tex0);
shader.set.texture(sn0, A.iChannel1, tex0);
shader.set.texture(sn0, A.iChannel2, tex0);
shader.set.texture(sn0, A.iChannel3, tex0);
#shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));
#shader.set.uniform.v(sn0, A.time1, 10*rnd(u0));


};
