### 3280 dota.battlefield
# 0: tex

# TASKS [
# . omphalos
# .. box2d body
# .. draw once texture cache subnodes (optimize)
# . panel
# .. locate skill buttons
# TASKS ]

draw(r0, 3281);

_ @3200;
_ @1010;
_ @sys.node;
_ @os.util0;
_ @basic.ui;
_ @os.util2;
_ @basic.ui.shader.node3.inc;
_ @dota.map.primitives;
_ @sys.events;

if (r0) {
 w:=500;
 h:=500;
};

parent0=node.get.parent(u0, nid);

parent.w node.prop.w.g(u0, parent0);
parent.h node.prop.h.g(u0, parent0);

ww=parent.w;
hh=parent.h;

# MAP ???
#node.new.this.ex4(r0, OBJECT, obj.types.map, 0,0, 0);

map0 0;

MAP 3224;
if (r0) {
 map0:=node.new.this.ex(r0, MAP, 0);
};

sn0 0;

tex0 r1;

if (r0) {
# new.ui.shader.node(sn0, 0,0,1, w,h, 1, 70014,28726); # bg.bigcircle


# new.ui.shader.node3(sn0, 0,0,1/5, w,h, 70014,29135); # dota.
};

# PLACES [

new.map.place {
 # place, x:y:s:w:h, node
 place0 _0;
 new.node.common0(_0, _1,_2,_3, _4,_5, NNN(dota.map.place), _6);
 node.change.parent(u0, place0, _6);
 node.change.parent(u0, map0, place0);
};


place0 0;

tex1 0;


_ @sys.storage;
_ @load.texture;

# SPACE [

_ @dota.space.spaceport;


# SPACE ]

if (r0) {

 load.texture(tex1, 11001,2,5); # ground.gold

 y0 0-25;
 w0 200;
 h0 200;
 h1 h0-50;
 x1 200;
 y1 10;
 new.place.space.container(sn0,  0,y0,1, w0,h0);
 new.map.place(place0, x1,y1,1/3, w0,h1, sn0);

 w0 100;
 h0 100;
 h1 h0*1.4;
 new.place.crunch1(sn0, 0,0,1,w0,h0, tex1);
 new.map.place(place0, 140,100,1/3, w0,h1, sn0);

 w0 100;
 h0 100;
 h1 h0;
 new.place.crunch2(sn0, 0,0,1,w0,h0, tex1);
 new.map.place(place0, 110,140,1/2, w0,h1, sn0);


 starship.new;

 w0 300;
 h0 300;
 h1 h0;
 new.place.space.launch.base(launch.base0, 0,0-h0/10,1, w0,h0);
 new.map.place(place0, 110,10,1/3, w0,h1, launch.base0);
 launch.base0:=place0; # hack


};

omphalos0 0;
if (r0) {
# new.node.common0(qq0, 200,0,1, 500,500, node.fid.by.name(u0, dota.forest.of.omphalos), 0);
 new.node.common0(omphalos0, 240,0,1/3, 100*3,300*3, dota.forest.of.omphalos, 0);
 new.node.common0(omphalos0, 0,240,1/3, 300*3,100*3, dota.forest.of.omphalos, 0);
};

# PLACES ]
# EVENTS [

add.coin {
 # x,y, coins
 _ @dota.fly.box2;
 s0 3;
 x0=_0;
 y0=_1;
 coins=_2;
# box0=fly.box1(dock0.x-1*rnd(u0)/2+20,dock0.y+dock0.h/s0/2,1, coins);
 box0=fly.box1(x0,y0,0.1, coins);
};

add.coin(0,0, 42);
add.coin(dock0.x-1*rnd(u0)/2+20,dock0.y+dock0.h/s0/2, 15);


dota.evs {
 # ev, o0... - event
 if (_0==ev.dota.add.coin1) {
  # x,y, coins
  add.coin(o0,o1, o2);
 };
};

ui.event.process4(dota.pool,0, dota.evs);



# EVENTS ]
# CAMERA TO PLAYER [

_ @sys.net;
player.index=net.get.index(u0);

movemode 0;

player0 0;
player0.x 0;
player0.y 0;

player0:=node.value.g(u0, map0,player.index);


if ((player0.x!=node.x(player0)) + (player0.y!=node.y(player0))) {
 movemode:=0;
};

if (movemode==0) {
 player0.x:=node.x(player0);
 player0.y:=node.y(player0);

 x:=(-node.x(player0))*s+w/2;
 y:=(-node.y(player0))*s+h/2-h/8;

 x:=if(x>0,0,x);
 y:=if(y>0,0,y);
};

# CAMERA TO PLAYER ]
# MAP BY CAMERA [

#s:=2;
#s:=3;
s:=5;

#x:=100*sin(t);
t+=dt;

_ @4;

info {
lbl0 0; val0 0; ui.value4(lbl0,val0,0,0,1/5, Y, y);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,5,1/5, X, x);
};
info;

_ @4;
lbl0 0; val0 0; ui.value4(lbl0,val0,0,40,1/3, W, w);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,50,1/3, H, h);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,60,1/3, WW, ww);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,70,1/3, HH, hh);
lbl0 0; val0 0; ui.value4(lbl0,val0,50,40,1/3, PW, parent.w);
lbl0 0; val0 0; ui.value4(lbl0,val0,50,50,1/3, PH, parent.h);

# MAP BY CAMERA ]
# TOUCH [

# TOUCH [

#_ @sys.os;
_ @os.util2;

_ @sys.touch;
_ @sys.events;

pressed 0;
clicked 0;
moving 0;

x0 0; y0 0;
xs 0; ys 0; 
dx.max 25;
dy.max 25;

touch.id 0;
touch.b0 0;

touch.ev {
 began {
  # x,y, gx,gy

  x0:=_2;
  y0:=_3;
  xs:=x0;
  ys:=y0;
#x:=rnd(u0)*111;
  pressed:=1;
  clicked:=1;

  movemode:=1;
 };
 moved {
  # x,y, gx,gy

  xp = x0;
  yp = y0;

  # check clicked
  if ((abs(_3-ys)>dy.max)+(abs(_2-xs)>dx.max)) {
   clicked:=0;
   moving:=1;
  };
  if (moving) {
   x+=_2-x0;
   y+=_3-y0;
   x0:=_2;
   y0:=_3;
  };
 };
 ended {
  # x,y, gx,gy

  pressed:=0;
  moving:=0;

#  click.ended;
 };
};

touch.rect2.lock(touch.id, 0,0,w,h);

_ @sys.touch.ev.process.once;
touch.b0:=1;
touch.ev.process.multi;

# TOUCH ]

### 3281 dota.battlefield.draw

#w 100;
#h 100;
color(u0, 0,0.7,0.9,1);
rect(u0, 2, 0,0, w,h);

