### 3220 dota.object
# Object (type,x,y,...)
# type, x,y, team, subtype(bot|player)
#
#  0      1 2   3      4
# <type> <x,y> <team> <subtype> [bot|player]
# type
#  - map
#  - unit
#  - shot
# team
#  - sys (0)
#  - green
#  - blue
# subtype
#  - none (0)
#  - bot
#  - player
#
# subtype::bot
#  type
#  - robot
#  - tower
#  - homebase
#  - shop
#  - homehealth
# subtype::player
#  id
#

type p0;

x0 p1;
y0 p2;

team p3;
subtype0 p4;
btype0 p5;
player.id p5;

_ @1010;
_ @sys.node;
_ @sys.events;
_ @3200;
_ @os.util0;

_ @dota.object.types;
_ @dota.object.context;

r7:=type;

draw(r0, 3221);

if (r0) {
 x:=x0;
 y:=y0;
# y:=0;
};

node.prop.z.order.s(u0, nid, 100000-y);


MAP 3224;
dota.unit 3230;
JOYSTICK 3270;

if (r0) {
 if (type==types.map) { 
  node.new.this.ex(r0, MAP, 0);
 };
 if (type==types.unit) {
  node.new.this.ex4(r0, dota.unit, subtype0, player.id, 0,0);
 };
# if (type==types.shot) { node.new.this.ex(r0, SHOT, 0);};
 if (type==types.joystick) {
  node.new.this.ex(r0, JOYSTICK, 0);
 };

 node.value.s(u0, nid,0, type);
 node.value.s(u0, nid,1, subtype0);
 node.value.s(u0, nid,2, btype0);

 # Add object to minimap
 events.push(u0, dota.pool,0, ev.dota.new.object, nid, 0,0,0);
};


# NET MOVE [

gnet.player.get.vx {
 # player.id
};
gnet.player.get.vy {
 # player.id
};

movement.speed 100/2;

apply.velocity {
 player.id _0;
 x+=get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 2)*gdt*movement.speed;
 y+=get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 3)*gdt*movement.speed;
};

if (type==types.unit) {
 if (subtype0==subtypes.player) {
  apply.velocity(player.id);
  r7:=player.id+5;
 };
};

# NET MOVE ]

_ @dota.object.box2d;

if (type==types.unit) {
 if (subtype0==subtypes.player) {
  vx get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 2)*gdt*3000*10;
  vy get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 3)*gdt*3000*10;
  box2d.body.set.linear.velocity(u0, body0, vx,vy);
#  watch(vx);
 };
};

_ @4;
lbl0 0; val0 0; ui.value4(lbl0,val0,0,0,0.1, X, x);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,0-2,0.1, Y, y);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,0-4,0.1, Player.id, player.id);

vx get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 2);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,0-6,0.1, VX, vx);

# alloc self context [

context.d.a r5;

self context;

# alloc self context ]



#if (r0) {
# h:=10;
# w:=10;
#};



### 3221 Object.draw

if (1) {
 psize(u0, 5);
 color(u0, 1,1,0,1);
 rect(u0, 2, 0,0,w,h);
};

# DRAW.OBJECT.DEBUG.BOX [

if (0) {

a 0.5;

color(u0, 0,0,0,a);
rect(u0, 6, 0,0, 16,16);
color(u0, 1,1,1,a);
rect(u0, 2, 0,0, 16,16);

# draw 0-9 16x16 [
l0:=r7;
color(u0, 1,1,0,a);
sa line(u0, 3, 5,12, 5,8);
sb line(u0, 3, 5,12, 5+6,12);
sc line(u0, 3, 5+6,12, 5+6,8);
sd line(u0, 3, 5+6,8, 5+6,4);
se line(u0, 3, 5,4, 5+6,4);
sf line(u0, 3, 5,8, 5,4);
sg line(u0, 3, 5,8, 5+6,8);
if (l0==0) {rect(u0, 2, 5,4, 6,8);};
if (l0==1) {line(u0, 3, 8,4, 8,12);};
if (l0==2) {sb;sc;se;sf;sg;};
if (l0==3) {sb;sc;sd;se;sg;};
if (l0==4) {sa;sc;sd;sg;};
if (l0==5) {sb;sa;se;sd;sg;};
if (l0==6) {sa;sb;sd;se;sf;sg;};
if (l0==7) {sb;sc;sd;};
if (l0==8) {sa;sb;sc;sd;se;sf;sg;};
if (l0==9) {sa;sb;sc;sd;se;sg;};
# draw 0-9 16x16 ]

};

# DRAW.OBJECT.DEBUG.BOX ]
