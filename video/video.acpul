### 1620 main.video
# pool,id,i

pool p0;
id p1;
i p2;

r0:=k==0;
k:=1;

_ @1010;
_ @sys.node;
_ @sys.media;

tex0 r1;

tex.w r2; 
tex.h r3;


video0 0;

if (r0) {
 media.video.select(u0, pool,id,i);
 media.video.options(u0, 0,0);

 media.video.play(u0, vid);
# media.video.stop(u0, vid);

#tex.w := 320/2; tex.h := 240/2;
#tex.w := 640/2; tex.h := 266/2;
#tex.w := 640/2; tex.h := 360/2;
tex.w := 1920/2; tex.h := 1080/2;
#tex.w := 1920/1; tex.h := 1080/1;
#tex.w := 640; tex.h := 368;
#640x360

# tex0:=node.ex.texture.create.fmt(r0, 1668/2,2388/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 1024/2,768/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 320/2,240/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 640/2,266/2, node.ex.texture.fmt.rgb565, 1);

 tex0:=node.ex.texture.create.fmt(r0, tex.w,tex.h, node.ex.texture.fmt.rgb565, 1);

};

w:=tex.w*2;
h:=tex.h*2;

draw(r0, 1621);

u0a=if(u0a,0,1);
media.video.render.texture(u0a, vid, tex0);

# NEW [

media.video.set.speed(u0, video0, 50);

sec=media.video.get.time(u0, video0, 0);
pts=media.video.get.time(u0, video0, 1);

duration.sec=media.video.get.duration(u0, video0, 0);
duration.pts=media.video.get.duration(u0, video0, 1);

media.video.get.size(u0, video0);
video.width=o0;
video.height=o1;

finished=media.video.is.finished(u0, video0);


_ @4;

x0 h;

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+0,2, A.time.sec, sec);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+40,2, A.time.pts, pts);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+80,2, A.duration.sec, duration.sec);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+120,2, A.w, video.width);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+160,2, A.h, video.height);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+200,2, A.finished, finished);

#ide.pool 15500;

debug.graph.add.v(debug.graph0, sec);
#debug.graph.add.v(debug.graph0, pts);

debug {
 _ @nodes;
 _ @nodes.inc.node2;
 _ @nodes.graph0.util;
 _ @os.util2;
 _ @sys.events;

 graph nodes.graph;

 sn0 0;
 graph0 0;
# graph1 0;
# graph2 0;
 if (r0) {
#  new.node2(sn0, 0,0,1,w/2,h/2, 1, 70014,150018); # golden.prize1
#  new.node2(sn0, 0,0,1,w/1,h/1, 1, 70014,150009); # clock2.node
  graph0:=new.node0(u0, nodes.graph0, 1500,500,3,300,300, GRAPH0,0,0,0);
#  node.move.to.parent(graph0);
#  graph1:=new.node0(u0, nodes.graph0, -300,0,1,w,h, GRAPH1,0,0,0);
#  node.move.to.parent(graph1);
#  graph2:=new.node0(u0, nodes.graph0, -300,200,1,w,h, GRAPH2,0,0,0);
#  node.move.to.parent(graph2);
 };
# graph0.add.v {
#  # v
#  nodes.graph.add.v(graph0, _0);
# };
};
debug;

# NEW ]
#x+=1;

### 1621 main.video.draw

_ @1010;
_ @sys.node;
_ @sys.media;

tex0 r1;
gl node.ex.gl;
shader node.ex.shader;

#media.video.render.texture(u0, 0, tex0);

color(u0, 0.0,0.0,0,0.5);

#ABOT.TEXTURE u23;
#u23:=tex0;

shader.use(u0, 1504, 1692);

shader.uniform.texture(u0, 0, tex0, 0);
shader.uniform.f1(u0, 1, 0.5+0.5*sin(l15*1));

#_ @sys.display;

#bw 1024;
#bh 768;
#l0:=display.orientation.get() - display.orientation.landscape;
#l0:=(l0>0);

#gl.rect(u0, -bw/2+30*l0,-bh/2, bw-60*l0,bh);

#watch((l0>0));
#if (l0>0) {
#gl.rect(u0, -bw/2+30,-bh/2, bw-60,bh);
#};
#if (l0<=0) {
#gl.rect(u0, -bh/2+30,-bw/2, bh-60,bw);
#};

#bw 1024/2;
#bh 768/2;
bw w;
bh h;

#tex.w r2; 
#tex.h r3;

#bw tex.w;
#bh tex.h;


gl.rect(u0, bw,bh, -bw,-bh);
#gl.rect(u0, -bw/2+30,-bh/2, bw-60,-bh);
#gl.rect(u0, -bw/2+30-1000,-bh/2, 3*bw-60,3*bh);
#gl.rect(u0, 0,0, 1024+200*sin(t),768);
#gl.rect(u0, -700,-200, 1024,768);
#gl.rect(u0, 0,0, 1024,768);

#rect(u0, 6, 0,0, 1024,768);

### 1600:S video.vsh

attribute vec4 a_position;
attribute vec2 a_texCoord;

varying mediump vec2 v_texCoord;
varying mediump vec4 v_p;

void main()
{
   gl_Position = CC_MVPMatrix * a_position+vec4(sin(a_position.x*0.05)*0.0,0.0,0.0,0.0);

   v_texCoord = a_texCoord;
   v_p = gl_Position;
}

### 1601:S video.fsh

#ifdef GL_ES
precision lowp float;
#endif

varying vec2 v_texCoord;

uniform sampler2D p0;

void main() 
{
//  gl_FragColor = texture2D(p0, v_texCoord);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));

//  gl_FragColor = vec4(1.0,0.5,1.0,0.5);
}



### 1690 test.main.video

_ @4;

main.video 1620;

vid0 0;

new.video {
 # pool,id,i
 vid0:=node.new.this.ex4(u0, main.video, _0,_1,_2);
#    node.prop.x.s(u0, l0, node.prop.x.g(u0,bn1));
#    node.prop.y.s(u0, l0, node.prop.y.g(u0,bn1)/2);
 node.prop.x.s(u0, vid0, 00);
 node.prop.y.s(u0, vid0, 00);
};

draw(r0, 1691);

if (r0) {
# new.video(5400, 0, 1);
# new.video(5500, 0, 1);
# new.video(5500, 0, 2);
# new.video(5500, 0, 4);
# new.video(5500, 0, 6);
# new.video(5500, 0, 7);
# new.video(5500, 0, 23); # low
# new.video(5500, 0, 21); # high
# new.video(5500, 1, 2); # high
# new.video(5500, 1, 6); # webm not works
# new.video(5500, 1, 7); # mkv works
 new.video(5500, 1, 21); # 
};

w:=node.prop.w.g(u0, vid0)+2;
h:=node.prop.h.g(u0, vid0)+2;


# TOUCH [

_ @sys.os;
_ @os.util2;

_ @sys.touch;
_ @sys.events;

x0 0; y0 0;
xs 0; ys 0; 
clicked r1;
dx.max 25;
dy.max 25;

pressed r2;

touch.id 0;
touch.b0 0;

moving 0;

touch.ev {
 began {
  # x,y, gx,gy

  x0:=_2;
  y0:=_3;
  xs:=x0;
  ys:=y0;

  pressed:=1;
  clicked:=1;
 };
 moved {
  # x,y, gx,gy

  xp = x0;
  yp = y0;

  # check clicked
  if ((abs(_3-ys)>dy.max)+(abs(_2-xs)>dx.max)) {
   clicked:=0;
   moving:=1;
  };
  if (moving) {
   x+=_2-x0;
   y+=_3-y0;
   x0:=_2;
   y0:=_3;
  };
 };
 ended {
  # x,y, gx,gy

  pressed:=0;
  moving:=0;

  if (clicked) {
   s/=2;
   s:=if(s<=3/16/2,2,s);
   s:=if(s<=1/4/2,3,s);

  };
 };
};
#  CREATURE0.SMILE 70802;
#  node.new.this.ex4(r0+(rnd(u0)<0.001), CREATURE0.SMILE, 1*rnd(u0),1*rnd(u0)+200, 0,0);

if (moving+r0) {
 node.z.to.front(u0, nid,0);
};

if (r0) {
  s:=1/4;
};

touch.rect2.lock(touch.id, 0,0,w,h);

_ @sys.touch.ev.process.once;
touch.b0:=1;
touch.ev.process.multi;

_ @4;
ui.value1(l12,110,110,0.5,s);

#w:=500;
#h:=500;

# TOUCH ]


### 1691 test.main.video.draw

pressed r2;
if (pressed,
  color(u0, 1,1,0,1),
  color(u0, 0,0,0.5,0.5));
rect(u0, 6, -1,-1,w,h);
0;



### 1692:S video.fsh

//#ifdef GL_ES
//precision lowp float;
//#endif

precision highp float;

varying vec2 v_texCoord;

uniform sampler2D p0;

vec3 pal( in float t1, in vec3 a, in vec3 b, in vec3 c, in vec3 d )
{
    return a + b*cos( 6.28318*(c*t1+d) );
}

vec3 col1(float a)
{
  vec3 col2 = pal( a, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20) );
  return col2;
}

vec3 col2(float a)
{
  vec3 col2 = pal( a, vec3(0.5,0.1,0.9),vec3(0.5,1.0,0.5),vec3(0.7,1.0,1.0),vec3(0.10,0.15,0.20) );
  return col2;
}

vec3 col3(float a)
{
  vec3 col2 = pal( a, vec3(0.9,0.9,0.0),vec3(0.5,0.5,0.9),vec3(0.7,1.0,5.0),vec3(0.20,0.25,0.20) );
  return col2;
}

vec3 col3a(float a)
{
  vec3 col2 = pal( a, vec3(0.9,0.9,0.0),vec3(0.5,0.5,0.9),vec3(0.7,1.0,0.0),vec3(0.20,0.25,0.20) );
  return col2;
}



void main() 
{
//  gl_FragColor = texture2D(p0, v_texCoord);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));

//  gl_FragColor = pow(gl_FragColor+gl_FragColor,2);
//  gl_FragColor *= 1.5;// pow(gl_FragColor+gl_FragColor,2);

//  gl_FragColor.rg *= 1.2;

// gl_FragColor.rgb += gl_FragColor.rgb*gl_FragColor.rgb;
// gl_FragColor *= 1.5;

// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/10.;

#define tex0 p0
 vec2 p = v_texCoord;
// vec2 p = vec2(1.-v_texCoord.x, v_texCoord.y);

 vec4 sum = vec4(1.);
 float blurSize = 1./640.*2.;
   sum += texture2D(tex0, p - 4.0 * blurSize) * 0.05;

#if 1
   sum += texture2D(tex0, p - 3.0 * blurSize) * 0.09;
   sum += texture2D(tex0, p - 2.0 * blurSize) * 0.12;
   sum += texture2D(tex0, p - 1.0 * blurSize) * 0.15;
   sum += texture2D(tex0, p                ) * 0.16;
   sum += texture2D(tex0, p + 1.0 * blurSize) * 0.15;
   sum += texture2D(tex0, p + 2.0 * blurSize) * 0.12;
   sum += texture2D(tex0, p + 3.0 * blurSize) * 0.09;
   sum += texture2D(tex0, p + 4.0 * blurSize) * 0.05;
#endif

 gl_FragColor.rgb *= col3(gl_FragColor.r*0.1)*0.7;
// gl_FragColor.rgb *= col3(gl_FragColor.r*0.1);

 gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(5.))/200.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(7.))/1000.;
// gl_FragColor.rgb += col1(gl_FragColor.r*.5+2.)*.3;
 gl_FragColor.rgb += col1(gl_FragColor.r*.5+9.)*.3;
// gl_FragColor.rgb += col1(gl_FragColor.r*.5+2.)*.2;
 gl_FragColor.rg *= 0.9;
 //gl_FragColor.b *= 0.5;
 gl_FragColor.rb += gl_FragColor.bg*0.2;

// gl_FragColor.rgb *= col3(gl_FragColor.r*.1+5.)*1.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(7.))/200.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/20.;
// gl_FragColor.rgb = sum.rgb/2.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/10.*sum.rgb/4.;

//  gl_FragColor = vec4(1.0,0.5,1.0,0.5);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));
}
