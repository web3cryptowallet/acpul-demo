### video.inc

new.video
 # video0, x:y:s:w:h, pool:id:i
 new.node.common4(_0, _1,_2,_3, _4,_5, NNN(main.video), _6,_7,_8, 0);

### 1620 main.video
# pool,id,i
# 0: sec - play seconds

pool p0;
id p1;
i p2;

r0:=k==0;
k:=1;

_ @1010;
_ @sys.node;
_ @sys.media;

tex0 r1;

tex.w r2; 
tex.h r3;


video0 0;

if (r0) {
 media.video.select(u0, pool,id,i);
 media.video.options(u0, 0,0);

 media.video.play(u0, vid);
# media.video.stop(u0, vid);

# media.video.set.time(u0, video0, 0, 50); 

# media.video.set.time(u0, video0, 0, 120); 
# media.video.set.time(u0, video0, 0, 150); 
# media.video.set.time(u0, video0, 0, 160); 



#tex.w := 320/2; tex.h := 240/2;
#tex.w := 640/2; tex.h := 266/2;
#tex.w := 640/2; tex.h := 360/2;
#tex.w := 1920/2; tex.h := 1080/2;
#tex.w := 1920/1; tex.h := 1080/1;
#tex.w := 640; tex.h := 368;
#640x360

 
# tex0:=node.ex.texture.create.fmt(r0, 1668/2,2388/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 1024/2,768/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 320/2,240/2, node.ex.texture.fmt.rgb565, 1);
# tex0:=node.ex.texture.create.fmt(r0, 640/2,266/2, node.ex.texture.fmt.rgb565, 1);

 media.video.get.size(u0, video0);
 tex.w:=o0/2;
 tex.h:=o1/2;

 tex0:=node.ex.texture.create.fmt(r0, tex.w,tex.h, node.ex.texture.fmt.rgb565, 1);
};

if (w==0) {
 w:=tex.w*2;
 h:=tex.h*2;
};

draw(r0, 1621);

u0a=if(u0a,0,1);
media.video.render.texture(u0a, vid, tex0);

# NEW [

#media.video.set.speed(u0, video0, 1000);
#media.video.set.speed(u0, video0, 30);
#media.video.set.speed(u0, video0, 1);

sec=media.video.get.time(u0, video0, 0);
pts=media.video.get.time(u0, video0, 1);

duration.sec=media.video.get.duration(u0, video0, 0);
duration.pts=media.video.get.duration(u0, video0, 1);

node.value.s(u0, nid,0, sec);

time0 0;

time0+=dt;

media.video.set.time.next.frame(u0, video0, 0, time0*1000/2);


#media.video.get.size(u0, video0);
#video.width=o0;
#video.height=o1;

finished=media.video.is.finished(u0, video0);

if (finished!=0) {
  media.video.play(u0, vid);
  time0:=0;
};

#if (time0>10) {
# time0:=0;
## media.video.set.time(u0, video0, 0, 0); bug
# media.video.set.time(u0, video0, 0, 2); 
#};

_ @4;

x0 h;

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+0,2, A.time.sec, sec);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+40,2, A.time.pts, pts);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+80,2, A.duration.sec, duration.sec);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+120,2, A.w, video.width);
lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+160,2, A.h, video.height);

lbl0 0; val0 0; ui.value4(lbl0,val0,0,x0+200,2, A.finished, finished);

#ide.pool 15500;

#debug.graph.add.v(debug.graph0, sec);
#debug.graph.add.v(debug.graph0, pts);

#media.video.set.time(u0, video0, 0, 120); 

# GRAPH DEBUG [

qq 0;
qq+=1;
if (qq>3) {
 qq:=0;
 debug.graph.add.v(debug.graph0, sec);
};

debug {
 _ @nodes;
 _ @nodes.inc.node2;
 _ @nodes.graph0.util;
 _ @os.util2;
 _ @sys.events;

 graph nodes.graph;

 sn0 0;
 graph0 0;
# graph1 0;
# graph2 0;
 if (r0) {
#  new.node2(sn0, 0,0,1,w/2,h/2, 1, 70014,150018); # golden.prize1
#  new.node2(sn0, 0,0,1,w/1,h/1, 1, 70014,150009); # clock2.node
  graph0:=new.node0(u0, nodes.graph0, 1500,500,3,300,300, GRAPH0,0,0,0);
#  node.move.to.parent(graph0);
#  graph1:=new.node0(u0, nodes.graph0, -300,0,1,w,h, GRAPH1,0,0,0);
#  node.move.to.parent(graph1);
#  graph2:=new.node0(u0, nodes.graph0, -300,200,1,w,h, GRAPH2,0,0,0);
#  node.move.to.parent(graph2);
 };
# graph0.add.v {
#  # v
#  nodes.graph.add.v(graph0, _0);
# };
};
debug;

# GRAPH DEBUG ]

# NEW ]
#x+=1;

### 1621 main.video.draw

_ @1010;
_ @sys.node;
_ @sys.media;

tex0 r1;
gl node.ex.gl;
shader node.ex.shader;

#media.video.render.texture(u0, 0, tex0);

color(u0, 0.0,0.0,0,0.5);

#ABOT.TEXTURE u23;
#u23:=tex0;

shader.use(u0, 1504, 1692);

shader.uniform.texture(u0, 0, tex0, 0);
shader.uniform.f1(u0, 1, 0.5+0.5*sin(l15*1));

#_ @sys.display;

#bw 1024;
#bh 768;
#l0:=display.orientation.get() - display.orientation.landscape;
#l0:=(l0>0);

#gl.rect(u0, -bw/2+30*l0,-bh/2, bw-60*l0,bh);

#watch((l0>0));
#if (l0>0) {
#gl.rect(u0, -bw/2+30,-bh/2, bw-60,bh);
#};
#if (l0<=0) {
#gl.rect(u0, -bh/2+30,-bw/2, bh-60,bw);
#};

#bw 1024/2;
#bh 768/2;
bw w;
bh h;

#tex.w r2; 
#tex.h r3;

#bw tex.w;
#bh tex.h;


gl.rect(u0, bw,bh, -bw,-bh);
#gl.rect(u0, -bw/2+30,-bh/2, bw-60,-bh);
#gl.rect(u0, -bw/2+30-1000,-bh/2, 3*bw-60,3*bh);
#gl.rect(u0, 0,0, 1024+200*sin(t),768);
#gl.rect(u0, -700,-200, 1024,768);
#gl.rect(u0, 0,0, 1024,768);

#rect(u0, 6, 0,0, 1024,768);


### 1690 test.main.video
# pool,id,i

pool0 p0;
id0 p1;
i0 p2;


_ @4;

main.video 1620;

vid0 0;

new.video {
 # pool,id,i
 vid0:=node.new.this.ex4(u0, main.video, _0,_1,_2);
#    node.prop.x.s(u0, l0, node.prop.x.g(u0,bn1));
#    node.prop.y.s(u0, l0, node.prop.y.g(u0,bn1)/2);
 node.prop.x.s(u0, vid0, 00);
 node.prop.y.s(u0, vid0, 00);
};

draw(r0, 1691);

if (r0) {
# new.video(5400, 0, 1);
# new.video(5500, 0, 1);
# new.video(5500, 0, 2);
# new.video(5500, 0, 4);
# new.video(5500, 0, 6);
# new.video(5500, 0, 7);
# new.video(5500, 0, 23); # low
# new.video(5500, 0, 21); # high
# new.video(5500, 1, 2); # high
# new.video(5500, 1, 6); # webm not works
# new.video(5500, 1, 7); # mkv works
# new.video(5500, 1, 21); # koop
# new.video(5500, 1, 15); # koop 
# new.video(5500, 1, 15); # koop 

 new.video(pool0, id0, i0); #  
};

w:=node.prop.w.g(u0, vid0)+2;
h:=node.prop.h.g(u0, vid0)+2;


_ @touch.tool.default.scale0.store;
touch.tool.default.scale0.store;

if (r0) {
  s:=1/4;
};

#_ @4;
#ui.value1(l12,110,110,0.5,s);



### 1691 test.main.video.draw

pressed r2;
if (pressed,
  color(u0, 1,1,0,1),
  color(u0, 0,0,0.5,0.5));
rect(u0, 6, -1,-1,w,h);
0;



