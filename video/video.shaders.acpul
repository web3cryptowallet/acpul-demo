### 1600:S video.vsh

attribute vec4 a_position;
attribute vec2 a_texCoord;

varying mediump vec2 v_texCoord;
varying mediump vec4 v_p;

void main()
{
   gl_Position = CC_MVPMatrix * a_position+vec4(sin(a_position.x*0.05)*0.0,0.0,0.0,0.0);

   v_texCoord = a_texCoord;
   v_p = gl_Position;
}

### 1601:S video.fsh

#ifdef GL_ES
precision lowp float;
#endif

varying vec2 v_texCoord;

uniform sampler2D p0;

void main() 
{
//  gl_FragColor = texture2D(p0, v_texCoord);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));

//  gl_FragColor = vec4(1.0,0.5,1.0,0.5);
}

### 1692:S video.fsh

//#ifdef GL_ES
//precision lowp float;
//#endif

precision highp float;

varying vec2 v_texCoord;

uniform sampler2D p0;

vec3 pal( in float t1, in vec3 a, in vec3 b, in vec3 c, in vec3 d )
{
    return a + b*cos( 6.28318*(c*t1+d) );
}

vec3 col1(float a)
{
  vec3 col2 = pal( a, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20) );
  return col2;
}

vec3 col2(float a)
{
  vec3 col2 = pal( a, vec3(0.5,0.1,0.9),vec3(0.5,1.0,0.5),vec3(0.7,1.0,1.0),vec3(0.10,0.15,0.20) );
  return col2;
}

vec3 col3(float a)
{
  vec3 col2 = pal( a, vec3(0.9,0.9,0.0),vec3(0.5,0.5,0.9),vec3(0.7,1.0,5.0),vec3(0.20,0.25,0.20) );
  return col2;
}

vec3 col3a(float a)
{
  vec3 col2 = pal( a, vec3(0.9,0.9,0.0),vec3(0.5,0.5,0.9),vec3(0.7,1.0,0.0),vec3(0.20,0.25,0.20) );
  return col2;
}



void main() 
{
//  gl_FragColor = texture2D(p0, v_texCoord);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));

//  gl_FragColor = pow(gl_FragColor+gl_FragColor,2);
//  gl_FragColor *= 1.5;// pow(gl_FragColor+gl_FragColor,2);

//  gl_FragColor.rg *= 1.2;

// gl_FragColor.rgb += gl_FragColor.rgb*gl_FragColor.rgb;
// gl_FragColor *= 1.5;

// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/10.;

#define tex0 p0
 vec2 p = v_texCoord;
// vec2 p = vec2(1.-v_texCoord.x, v_texCoord.y);

 vec4 sum = vec4(1.);
 float blurSize = 1./640.*2.;
   sum += texture2D(tex0, p - 4.0 * blurSize) * 0.05;

#if 1
   sum += texture2D(tex0, p - 3.0 * blurSize) * 0.09;
   sum += texture2D(tex0, p - 2.0 * blurSize) * 0.12;
   sum += texture2D(tex0, p - 1.0 * blurSize) * 0.15;
   sum += texture2D(tex0, p                ) * 0.16;
   sum += texture2D(tex0, p + 1.0 * blurSize) * 0.15;
   sum += texture2D(tex0, p + 2.0 * blurSize) * 0.12;
   sum += texture2D(tex0, p + 3.0 * blurSize) * 0.09;
   sum += texture2D(tex0, p + 4.0 * blurSize) * 0.05;
#endif

 gl_FragColor.rgb *= col3(gl_FragColor.r*0.1)*0.7;
// gl_FragColor.rgb *= col3(gl_FragColor.r*0.1);

 gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(5.))/200.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(7.))/1000.;
// gl_FragColor.rgb += col1(gl_FragColor.r*.5+2.)*.3;
 gl_FragColor.rgb += col1(gl_FragColor.r*.5+9.)*.3;
// gl_FragColor.rgb += col1(gl_FragColor.r*.5+2.)*.2;
 gl_FragColor.rg *= 0.9;
 //gl_FragColor.b *= 0.5;
 gl_FragColor.rb += gl_FragColor.bg*0.2;

// gl_FragColor.rgb *= col3(gl_FragColor.r*.1+5.)*1.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+sum.rgb/.8,vec3(7.))/200.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/20.;
// gl_FragColor.rgb = sum.rgb/2.;
// gl_FragColor.rgb += pow(gl_FragColor.rgb+vec3(1.),vec3(7.))/10.*sum.rgb/4.;

//  gl_FragColor = vec4(1.0,0.5,1.0,0.5);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));
}
